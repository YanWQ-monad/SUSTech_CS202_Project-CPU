// Generated by CIRCT firtool-1.38.0
// VCS coverage exclude_file
module mem_combMem(
  input  [4:0] R0_addr,
  input        R0_en,
               R0_clk,
  input  [4:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [3:0] W0_data,
  output [3:0] R0_data
);

  reg [3:0] Memory[0:31];
  always @(posedge W0_clk) begin
    if (W0_en)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 4'bx;
endmodule

// VCS coverage exclude_file
module mem_combMem_0(
  input  [6:0] R0_addr,
  input        R0_en,
               R0_clk,
  input  [6:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data,
  output [7:0] R0_data
);

  reg [7:0] Memory[0:127];
  always @(posedge W0_clk) begin
    if (W0_en)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;
endmodule

// VCS coverage exclude_file
module mem_combMem_1(
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [4:0]  R1_addr,
  input         R1_en,
                R1_clk,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [31:0] W0_data,
  output [31:0] R0_data,
                R1_data
);

  reg [31:0] Memory[0:31];
  always @(posedge W0_clk) begin
    if (W0_en)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 32'bx;
  assign R1_data = R1_en ? Memory[R1_addr] : 32'bx;
endmodule

// external module clk_wiz_0

module ClockWizard(
  input  clock,
         reset,
  output io_clockCpu,
         io_clockVga,
         io_clockUart,
         io_reset
);

  wire       _raw_clk_uart;
  wire       _raw_locked;
  reg  [9:0] cnt;
  always @(posedge _raw_clk_uart)
    cnt <= cnt + 10'h97;
  clk_wiz_0 raw (
    .reset    (1'h0),
    .clk_in1  (clock),
    .clk_std  (io_clockCpu),
    .clk_vga  (io_clockVga),
    .clk_uart (_raw_clk_uart),
    .locked   (_raw_locked)
  );
  assign io_clockUart = cnt[9];
  assign io_reset = reset | ~_raw_locked;
endmodule

module Debounce(
  input  clock,
         reset,
         io_in,
  output io_out_out,
         io_out_onDown
);

  reg        sync_r;
  reg        sync;
  reg        out;
  reg [18:0] cnt;
  reg        io_out_out_REG;
  reg        io_out_onDown_REG;
  always @(posedge clock) begin
    automatic logic idle;
    idle = out == sync;
    sync_r <= io_in;
    sync <= sync_r;
    io_out_out_REG <= out;
    io_out_onDown_REG <= ~idle & (&cnt) & ~out;
    if (reset) begin
      out <= 1'h0;
      cnt <= 19'h0;
    end
    else begin
      out <= (&cnt) ^ out;
      if (idle)
        cnt <= 19'h0;
      else
        cnt <= cnt + 19'h1;
    end
  end // always @(posedge)
  assign io_out_out = io_out_out_REG;
  assign io_out_onDown = io_out_onDown_REG;
endmodule

module CrossClockQueue(
  input        reset,
               io_enq_valid,
  input  [7:0] io_enq_bits,
  input        io_deq_ready,
               io_clkEnq,
               io_clkDeq,
  output       io_enq_ready,
               io_deq_valid,
  output [7:0] io_deq_bits
);

  reg  [6:0] enqIdx;
  reg  [6:0] deqIdx;
  wire [6:0] enqNextIdx = enqIdx + 7'h1;
  wire       _T = enqNextIdx != deqIdx;
  wire       _T_1 = _T & io_enq_valid;
  wire       _T_2 = enqIdx != deqIdx;
  always @(posedge io_clkEnq) begin
    if (reset)
      enqIdx <= 7'h0;
    else if (_T_1)
      enqIdx <= enqNextIdx;
  end // always @(posedge)
  always @(posedge io_clkDeq) begin
    if (reset)
      deqIdx <= 7'h0;
    else if (_T_2 & io_deq_ready)
      deqIdx <= deqIdx + 7'h1;
  end // always @(posedge)
  mem_combMem_0 mem_ext (
    .R0_addr (deqIdx),
    .R0_en   (1'h1),
    .R0_clk  (io_clkDeq),
    .W0_addr (enqIdx),
    .W0_en   (_T_1),
    .W0_clk  (io_clkEnq),
    .W0_data (io_enq_bits),
    .R0_data (io_deq_bits)
  );
  assign io_enq_ready = _T;
  assign io_deq_valid = _T_2;
endmodule

module UARTTransmitter(
  input        clock,
               reset,
               io_valid,
  input  [7:0] io_bits,
  input        tick,
  output       io_ready,
               tx
);

  reg  [3:0] state;
  reg  [7:0] data;
  wire       _io_ready_T = state == 4'h1;
  always @(posedge clock) begin
    if (reset)
      state <= 4'h0;
    else if (tick) begin
      if (state == 4'h2)
        state <= 4'h0;
      else if (state == 4'hB)
        state <= 4'h2;
      else if (state == 4'hA)
        state <= 4'hB;
      else if (state == 4'h9)
        state <= 4'hA;
      else if (state == 4'h8)
        state <= 4'h9;
      else if (state == 4'h7)
        state <= 4'h8;
      else
        state <=
          {1'h0,
           state == 4'h6
             ? 3'h7
             : state == 4'h5
                 ? 3'h6
                 : state == 4'h4 ? 3'h5 : state == 4'h1 ? 3'h4 : {2'h0, io_valid}};
    end
    if (tick) begin
      if (state == 4'h1 & io_valid)
        data <= io_bits;
      else
        data <= {1'h0, data[7:1]};
    end
  end // always @(posedge)
  assign io_ready = tick & _io_ready_T;
  assign tx = (|(state[3:2])) ? data[0] : ~_io_ready_T;
endmodule

module UARTReceiver(
  input        clock,
               reset,
               rx,
  output       io_valid,
  output [7:0] io_bits
);

  reg  [2:0] cnt;
  reg        sync_r;
  reg        sync;
  reg        bit_0;
  reg  [3:0] spacing;
  wire       tick = spacing == 4'hA;
  reg  [3:0] state;
  reg        data_0;
  reg        data_1;
  reg        data_2;
  reg        data_3;
  reg        data_4;
  reg        data_5;
  reg        data_6;
  reg        data_7;
  always @(posedge clock) begin
    if (reset) begin
      cnt <= 3'h6;
      bit_0 <= 1'h1;
      spacing <= 4'h0;
      state <= 4'h0;
    end
    else begin
      if (sync & ~(&cnt))
        cnt <= cnt + 3'h1;
      else if (~sync & (|cnt))
        cnt <= cnt - 3'h1;
      bit_0 <= (&cnt) | (|cnt) & bit_0;
      if (state == 4'h0) begin
        spacing <= 4'h0;
        state <= {3'h0, ~bit_0};
      end
      else begin
        spacing <= spacing + 4'h1;
        if (&spacing) begin
          if (state == 4'h2)
            state <= 4'h0;
          else if (state == 4'hB)
            state <= 4'h2;
          else if (state == 4'hA)
            state <= 4'hB;
          else if (state == 4'h9)
            state <= 4'hA;
          else if (state == 4'h8)
            state <= 4'h9;
          else if (state == 4'h7)
            state <= 4'h8;
          else
            state <=
              {1'h0,
               state == 4'h6
                 ? 3'h7
                 : state == 4'h5 ? 3'h6 : state == 4'h4 ? 3'h5 : {state == 4'h1, 2'h0}};
        end
      end
    end
    sync_r <= rx;
    sync <= sync_r;
    if (tick) begin
      data_0 <= bit_0;
      data_1 <= data_0;
      data_2 <= data_1;
      data_3 <= data_2;
      data_4 <= data_3;
      data_5 <= data_4;
      data_6 <= data_5;
      data_7 <= data_6;
    end
  end // always @(posedge)
  assign io_valid = state == 4'h2 & tick;
  assign io_bits = {data_0, data_1, data_2, data_3, data_4, data_5, data_6, data_7};
endmodule

module UART(
  input        clock,
               reset,
               io_pair_rx,
               io_dataIn_valid,
  input  [7:0] io_dataIn_bits,
  output       io_pair_tx,
               io_dataIn_ready,
               io_dataOut_valid,
  output [7:0] io_dataOut_bits
);

  reg [3:0] clkCnt;
  always @(posedge clock) begin
    if (reset)
      clkCnt <= 4'h0;
    else
      clkCnt <= clkCnt + 4'h1;
  end // always @(posedge)
  UARTTransmitter tx (
    .clock    (clock),
    .reset    (reset),
    .io_valid (io_dataIn_valid),
    .io_bits  (io_dataIn_bits),
    .tick     (&clkCnt),
    .io_ready (io_dataIn_ready),
    .tx       (io_pair_tx)
  );
  UARTReceiver rx (
    .clock    (clock),
    .reset    (reset),
    .rx       (io_pair_rx),
    .io_valid (io_dataOut_valid),
    .io_bits  (io_dataOut_bits)
  );
endmodule

module UARTWrap(
  input        clock,
               reset,
               io_pair_rx,
               io_dataTx_valid,
  input  [7:0] io_dataTx_bits,
  input        io_dataRx_ready,
               io_uartClock,
  output       io_pair_tx,
               io_dataTx_ready,
               io_dataRx_valid,
  output [7:0] io_dataRx_bits
);

  wire       _uart_io_dataIn_ready;
  wire       _uart_io_dataOut_valid;
  wire [7:0] _uart_io_dataOut_bits;
  wire       _txQueue_io_deq_valid;
  wire [7:0] _txQueue_io_deq_bits;
  CrossClockQueue txQueue (
    .reset        (reset),
    .io_enq_valid (io_dataTx_valid),
    .io_enq_bits  (io_dataTx_bits),
    .io_deq_ready (_uart_io_dataIn_ready),
    .io_clkEnq    (clock),
    .io_clkDeq    (io_uartClock),
    .io_enq_ready (io_dataTx_ready),
    .io_deq_valid (_txQueue_io_deq_valid),
    .io_deq_bits  (_txQueue_io_deq_bits)
  );
  CrossClockQueue rxQueue (
    .reset        (reset),
    .io_enq_valid (_uart_io_dataOut_valid),
    .io_enq_bits  (_uart_io_dataOut_bits),
    .io_deq_ready (io_dataRx_ready),
    .io_clkEnq    (io_uartClock),
    .io_clkDeq    (clock),
    .io_enq_ready (/* unused */),
    .io_deq_valid (io_dataRx_valid),
    .io_deq_bits  (io_dataRx_bits)
  );
  UART uart (
    .clock            (io_uartClock),
    .reset            (reset),
    .io_pair_rx       (io_pair_rx),
    .io_dataIn_valid  (_txQueue_io_deq_valid),
    .io_dataIn_bits   (_txQueue_io_deq_bits),
    .io_pair_tx       (io_pair_tx),
    .io_dataIn_ready  (_uart_io_dataIn_ready),
    .io_dataOut_valid (_uart_io_dataOut_valid),
    .io_dataOut_bits  (_uart_io_dataOut_bits)
  );
endmodule

module DivTen(
  input  [31:0] io_in,
  output [28:0] io_quotient,
  output [3:0]  io_remainder
);

  wire [31:0] q1 = {1'h0, io_in[31:1]} + {2'h0, io_in[31:2]};
  wire [31:0] q2 = q1 + {4'h0, q1[31:4]};
  wire [31:0] q3 = q2 + {8'h0, q2[31:8]};
  wire [31:0] _GEN = q3 + {16'h0, q3[31:16]};
  wire [28:0] _io_quotient_output =
    _GEN[31:3] + {28'h0, io_in - {{_GEN[31:3], 2'h0} + {2'h0, _GEN[31:3]}, 1'h0} > 32'h9};
  assign io_quotient = _io_quotient_output;
  assign io_remainder =
    io_in[3:0] - {_io_quotient_output[2:0], 1'h0} - {_io_quotient_output[0], 3'h0};
endmodule

module BcdToTube(
  input  [3:0] io_digit,
  output       io_tubes_0,
               io_tubes_1,
               io_tubes_2,
               io_tubes_3,
               io_tubes_4,
               io_tubes_5,
               io_tubes_6
);

  wire [15:0][6:0] _GEN =
    '{7'h71,
      7'h79,
      7'h5E,
      7'h58,
      7'h7C,
      7'h77,
      7'h6F,
      7'h7F,
      7'h7,
      7'h7D,
      7'h6D,
      7'h66,
      7'h4F,
      7'h5B,
      7'h6,
      7'h3F};
  assign io_tubes_0 = _GEN[io_digit][0];
  assign io_tubes_1 = _GEN[io_digit][1];
  assign io_tubes_2 = _GEN[io_digit][2];
  assign io_tubes_3 = _GEN[io_digit][3];
  assign io_tubes_4 = _GEN[io_digit][4];
  assign io_tubes_5 = _GEN[io_digit][5];
  assign io_tubes_6 = _GEN[io_digit][6];
endmodule

module Tubes(
  input        clock,
               reset,
  input  [3:0] io_digits_0,
               io_digits_1,
               io_digits_2,
               io_digits_3,
               io_digits_4,
               io_digits_5,
               io_digits_6,
               io_digits_7,
  input        io_enables_0,
               io_enables_1,
               io_enables_2,
               io_enables_3,
               io_enables_4,
               io_enables_5,
               io_enables_6,
               io_enables_7,
  output       io_out_enable_0,
               io_out_enable_1,
               io_out_enable_2,
               io_out_enable_3,
               io_out_enable_4,
               io_out_enable_5,
               io_out_enable_6,
               io_out_enable_7,
               io_out_tubes_0,
               io_out_tubes_1,
               io_out_tubes_2,
               io_out_tubes_3,
               io_out_tubes_4,
               io_out_tubes_5,
               io_out_tubes_6,
               io_out_tubes_7
);

  wire            _toTube_io_tubes_0;
  wire            _toTube_io_tubes_1;
  wire            _toTube_io_tubes_2;
  wire            _toTube_io_tubes_3;
  wire            _toTube_io_tubes_4;
  wire            _toTube_io_tubes_5;
  wire            _toTube_io_tubes_6;
  wire [7:0][7:0] _GEN = '{8'h80, 8'h40, 8'h20, 8'h10, 8'h8, 8'h4, 8'h2, 8'h1};
  reg  [2:0]      now;
  wire [7:0]      _T_16 =
    ~(_GEN[now]
      & {io_enables_7,
         io_enables_6,
         io_enables_5,
         io_enables_4,
         io_enables_3,
         io_enables_2,
         io_enables_1,
         io_enables_0});
  wire [7:0][3:0] _GEN_0 =
    {{io_digits_7},
     {io_digits_6},
     {io_digits_5},
     {io_digits_4},
     {io_digits_3},
     {io_digits_2},
     {io_digits_1},
     {io_digits_0}};
  always @(posedge clock) begin
    if (reset)
      now <= 3'h0;
    else
      now <= now + 3'h1;
  end // always @(posedge)
  BcdToTube toTube (
    .io_digit   (_GEN_0[now]),
    .io_tubes_0 (_toTube_io_tubes_0),
    .io_tubes_1 (_toTube_io_tubes_1),
    .io_tubes_2 (_toTube_io_tubes_2),
    .io_tubes_3 (_toTube_io_tubes_3),
    .io_tubes_4 (_toTube_io_tubes_4),
    .io_tubes_5 (_toTube_io_tubes_5),
    .io_tubes_6 (_toTube_io_tubes_6)
  );
  assign io_out_enable_0 = _T_16[0];
  assign io_out_enable_1 = _T_16[1];
  assign io_out_enable_2 = _T_16[2];
  assign io_out_enable_3 = _T_16[3];
  assign io_out_enable_4 = _T_16[4];
  assign io_out_enable_5 = _T_16[5];
  assign io_out_enable_6 = _T_16[6];
  assign io_out_enable_7 = _T_16[7];
  assign io_out_tubes_0 = ~_toTube_io_tubes_0;
  assign io_out_tubes_1 = ~_toTube_io_tubes_1;
  assign io_out_tubes_2 = ~_toTube_io_tubes_2;
  assign io_out_tubes_3 = ~_toTube_io_tubes_3;
  assign io_out_tubes_4 = ~_toTube_io_tubes_4;
  assign io_out_tubes_5 = ~_toTube_io_tubes_5;
  assign io_out_tubes_6 = ~_toTube_io_tubes_6;
  assign io_out_tubes_7 = 1'h1;
endmodule

module TubesController(
  input         clock,
                reset,
  input  [31:0] io_in_value,
  input         io_in_enables_0,
                io_in_enables_1,
                io_in_enables_2,
                io_in_enables_3,
                io_in_enables_4,
                io_in_enables_5,
                io_in_enables_6,
                io_in_enables_7,
                io_in_mode,
  output        io_out_enable_0,
                io_out_enable_1,
                io_out_enable_2,
                io_out_enable_3,
                io_out_enable_4,
                io_out_enable_5,
                io_out_enable_6,
                io_out_enable_7,
                io_out_tubes_0,
                io_out_tubes_1,
                io_out_tubes_2,
                io_out_tubes_3,
                io_out_tubes_4,
                io_out_tubes_5,
                io_out_tubes_6,
                io_out_tubes_7
);

  wire [3:0]  _decDigits_divTen_7_io_remainder;
  wire [28:0] _decDigits_divTen_6_io_quotient;
  wire [3:0]  _decDigits_divTen_6_io_remainder;
  wire [28:0] _decDigits_divTen_5_io_quotient;
  wire [3:0]  _decDigits_divTen_5_io_remainder;
  wire [28:0] _decDigits_divTen_4_io_quotient;
  wire [3:0]  _decDigits_divTen_4_io_remainder;
  wire [28:0] _decDigits_divTen_3_io_quotient;
  wire [3:0]  _decDigits_divTen_3_io_remainder;
  wire [28:0] _decDigits_divTen_2_io_quotient;
  wire [3:0]  _decDigits_divTen_2_io_remainder;
  wire [28:0] _decDigits_divTen_1_io_quotient;
  wire [3:0]  _decDigits_divTen_1_io_remainder;
  wire [28:0] _decDigits_divTen_io_quotient;
  wire [3:0]  _decDigits_divTen_io_remainder;
  reg  [11:0] tubeClock_clockCnt;
  wire        tubeClock = tubeClock_clockCnt[11];
  always @(posedge clock)
    tubeClock_clockCnt <= tubeClock_clockCnt + 12'h1;
  DivTen decDigits_divTen (
    .io_in        (io_in_value),
    .io_quotient  (_decDigits_divTen_io_quotient),
    .io_remainder (_decDigits_divTen_io_remainder)
  );
  DivTen decDigits_divTen_1 (
    .io_in        ({3'h0, _decDigits_divTen_io_quotient}),
    .io_quotient  (_decDigits_divTen_1_io_quotient),
    .io_remainder (_decDigits_divTen_1_io_remainder)
  );
  DivTen decDigits_divTen_2 (
    .io_in        ({3'h0, _decDigits_divTen_1_io_quotient}),
    .io_quotient  (_decDigits_divTen_2_io_quotient),
    .io_remainder (_decDigits_divTen_2_io_remainder)
  );
  DivTen decDigits_divTen_3 (
    .io_in        ({3'h0, _decDigits_divTen_2_io_quotient}),
    .io_quotient  (_decDigits_divTen_3_io_quotient),
    .io_remainder (_decDigits_divTen_3_io_remainder)
  );
  DivTen decDigits_divTen_4 (
    .io_in        ({3'h0, _decDigits_divTen_3_io_quotient}),
    .io_quotient  (_decDigits_divTen_4_io_quotient),
    .io_remainder (_decDigits_divTen_4_io_remainder)
  );
  DivTen decDigits_divTen_5 (
    .io_in        ({3'h0, _decDigits_divTen_4_io_quotient}),
    .io_quotient  (_decDigits_divTen_5_io_quotient),
    .io_remainder (_decDigits_divTen_5_io_remainder)
  );
  DivTen decDigits_divTen_6 (
    .io_in        ({3'h0, _decDigits_divTen_5_io_quotient}),
    .io_quotient  (_decDigits_divTen_6_io_quotient),
    .io_remainder (_decDigits_divTen_6_io_remainder)
  );
  DivTen decDigits_divTen_7 (
    .io_in        ({3'h0, _decDigits_divTen_6_io_quotient}),
    .io_quotient  (/* unused */),
    .io_remainder (_decDigits_divTen_7_io_remainder)
  );
  Tubes tube (
    .clock           (tubeClock),
    .reset           (reset),
    .io_digits_0     (io_in_mode ? io_in_value[31:28] : _decDigits_divTen_7_io_remainder),
    .io_digits_1     (io_in_mode ? io_in_value[27:24] : _decDigits_divTen_6_io_remainder),
    .io_digits_2     (io_in_mode ? io_in_value[23:20] : _decDigits_divTen_5_io_remainder),
    .io_digits_3     (io_in_mode ? io_in_value[19:16] : _decDigits_divTen_4_io_remainder),
    .io_digits_4     (io_in_mode ? io_in_value[15:12] : _decDigits_divTen_3_io_remainder),
    .io_digits_5     (io_in_mode ? io_in_value[11:8] : _decDigits_divTen_2_io_remainder),
    .io_digits_6     (io_in_mode ? io_in_value[7:4] : _decDigits_divTen_1_io_remainder),
    .io_digits_7     (io_in_mode ? io_in_value[3:0] : _decDigits_divTen_io_remainder),
    .io_enables_0    (io_in_enables_0),
    .io_enables_1    (io_in_enables_1),
    .io_enables_2    (io_in_enables_2),
    .io_enables_3    (io_in_enables_3),
    .io_enables_4    (io_in_enables_4),
    .io_enables_5    (io_in_enables_5),
    .io_enables_6    (io_in_enables_6),
    .io_enables_7    (io_in_enables_7),
    .io_out_enable_0 (io_out_enable_0),
    .io_out_enable_1 (io_out_enable_1),
    .io_out_enable_2 (io_out_enable_2),
    .io_out_enable_3 (io_out_enable_3),
    .io_out_enable_4 (io_out_enable_4),
    .io_out_enable_5 (io_out_enable_5),
    .io_out_enable_6 (io_out_enable_6),
    .io_out_enable_7 (io_out_enable_7),
    .io_out_tubes_0  (io_out_tubes_0),
    .io_out_tubes_1  (io_out_tubes_1),
    .io_out_tubes_2  (io_out_tubes_2),
    .io_out_tubes_3  (io_out_tubes_3),
    .io_out_tubes_4  (io_out_tubes_4),
    .io_out_tubes_5  (io_out_tubes_5),
    .io_out_tubes_6  (io_out_tubes_6),
    .io_out_tubes_7  (io_out_tubes_7)
  );
endmodule

module Keyboard(
  input        clock,
               reset,
               io_in_cols_0,
               io_in_cols_1,
               io_in_cols_2,
               io_in_cols_3,
  output       io_in_rows_0,
               io_in_rows_1,
               io_in_rows_2,
               io_in_rows_3,
               io_out_valid,
  output [3:0] io_out_bits
);

  reg [3:0]  rows_0;
  reg [3:0]  rows_1;
  reg [3:0]  rows_2;
  reg [3:0]  rows_3;
  reg [16:0] tick_x;
  reg [1:0]  cnt;
  reg [3:0]  REG;
  reg        press;
  reg [1:0]  state;
  reg [3:0]  out;
  reg        io_out_valid_REG;
  always @(posedge clock) begin
    automatic logic [3:0][3:0] _GEN = '{4'h8, 4'h4, 4'h2, 4'h1};
    automatic logic [3:0][3:0] _GEN_0 = {{rows_3}, {rows_2}, {rows_1}, {rows_0}};
    automatic logic [3:0]      _GEN_1;
    automatic logic            onDown;
    _GEN_1 = _GEN_0[state];
    onDown = ~press & (|_GEN_1);
    if (reset) begin
      rows_0 <= 4'h0;
      rows_1 <= 4'h0;
      rows_2 <= 4'h0;
      rows_3 <= 4'h0;
      tick_x <= 17'h0;
      cnt <= 2'h0;
      press <= 1'h0;
      state <= 2'h0;
      out <= 4'hF;
    end
    else begin
      automatic logic [3:0]      _rows_T;
      automatic logic [3:0][1:0] _GEN_2 =
        {{2'h0}, {2'h3}, {2'h2}, {{1'h0, state == 2'h0}}};
      _rows_T = {io_in_cols_3, io_in_cols_2, io_in_cols_1, io_in_cols_0};
      if ((&tick_x) & cnt == 2'h0)
        rows_0 <= ~_rows_T;
      if ((&tick_x) & cnt == 2'h1)
        rows_1 <= ~_rows_T;
      if ((&tick_x) & cnt == 2'h2)
        rows_2 <= ~_rows_T;
      if ((&tick_x) & (&cnt))
        rows_3 <= ~_rows_T;
      tick_x <= tick_x + 17'h1;
      if (&tick_x)
        cnt <= cnt + 2'h1;
      press <= onDown | (|{rows_3, rows_2, rows_1, rows_0}) & press;
      state <= _GEN_2[state];
      if (onDown)
        out <=
          {state, _GEN_1 == 4'h8 ? 2'h3 : _GEN_1 == 4'h4 ? 2'h2 : {1'h0, _GEN_1 == 4'h2}};
    end
    REG <= ~_GEN[cnt];
    io_out_valid_REG <= onDown;
  end // always @(posedge)
  assign io_in_rows_0 = REG[0];
  assign io_in_rows_1 = REG[1];
  assign io_in_rows_2 = REG[2];
  assign io_in_rows_3 = REG[3];
  assign io_out_valid = io_out_valid_REG;
  assign io_out_bits = out;
endmodule

module CrossClockQueue_2(
  input        reset,
               io_enq_valid,
  input  [3:0] io_enq_bits,
  input        io_deq_ready,
               io_clkEnq,
               io_clkDeq,
  output       io_deq_valid,
  output [3:0] io_deq_bits
);

  reg  [4:0] enqIdx;
  reg  [4:0] deqIdx;
  wire [4:0] enqNextIdx = enqIdx + 5'h1;
  wire       _T_1 = enqNextIdx != deqIdx & io_enq_valid;
  wire       _T_2 = enqIdx != deqIdx;
  always @(posedge io_clkEnq) begin
    if (reset)
      enqIdx <= 5'h0;
    else if (_T_1)
      enqIdx <= enqNextIdx;
  end // always @(posedge)
  always @(posedge io_clkDeq) begin
    if (reset)
      deqIdx <= 5'h0;
    else if (_T_2 & io_deq_ready)
      deqIdx <= deqIdx + 5'h1;
  end // always @(posedge)
  mem_combMem mem_ext (
    .R0_addr (deqIdx),
    .R0_en   (1'h1),
    .R0_clk  (io_clkDeq),
    .W0_addr (enqIdx),
    .W0_en   (_T_1),
    .W0_clk  (io_clkEnq),
    .W0_data (io_enq_bits),
    .R0_data (io_deq_bits)
  );
  assign io_deq_valid = _T_2;
endmodule

module VGATiming(
  input         clock,
                reset,
  output        io_hsync,
                io_vsync,
                io_dataEnable,
  output [10:0] io_info_x,
                io_info_y
);

  reg [10:0] x;
  reg [10:0] y;
  reg [10:0] trueY;
  reg        io_hsync_REG;
  reg        io_vsync_REG;
  reg        io_dataEnable_REG;
  reg [10:0] io_info_x_REG;
  reg [10:0] io_info_y_REG;
  always @(posedge clock) begin
    if (reset) begin
      x <= 11'h700;
      y <= 11'h7E4;
      trueY <= 11'h7E4;
    end
    else begin
      if (x == 11'h31F) begin
        x <= 11'h700;
        if (y == 11'h257)
          y <= 11'h7E4;
        else
          y <= y + 11'h1;
      end
      else
        x <= x + 11'h1;
      if (&x)
        trueY <= y;
    end
    io_hsync_REG <= ~($signed(x) > -11'shD9 & $signed(x) < -11'sh58);
    io_vsync_REG <= ~($signed(trueY) > -11'sh1C & $signed(trueY) < -11'sh17);
    io_dataEnable_REG <= $signed(x) > -11'sh1 & $signed(y) > -11'sh1;
    io_info_x_REG <= x;
    io_info_y_REG <= y;
  end // always @(posedge)
  assign io_hsync = io_hsync_REG;
  assign io_vsync = io_vsync_REG;
  assign io_dataEnable = io_dataEnable_REG;
  assign io_info_x = io_info_x_REG;
  assign io_info_y = io_info_y_REG;
endmodule

module VGATop(
  input         clock,
                reset,
  input  [3:0]  io_in_r,
                io_in_g,
                io_in_b,
  output        io_out_hsync,
                io_out_vsync,
  output [3:0]  io_out_data_r,
                io_out_data_g,
                io_out_data_b,
  output [10:0] io_info_x,
                io_info_y
);

  wire _timing_io_dataEnable;
  VGATiming timing (
    .clock         (clock),
    .reset         (reset),
    .io_hsync      (io_out_hsync),
    .io_vsync      (io_out_vsync),
    .io_dataEnable (_timing_io_dataEnable),
    .io_info_x     (io_info_x),
    .io_info_y     (io_info_y)
  );
  assign io_out_data_r = _timing_io_dataEnable ? io_in_r : 4'h0;
  assign io_out_data_g = _timing_io_dataEnable ? io_in_g : 4'h0;
  assign io_out_data_b = _timing_io_dataEnable ? io_in_b : 4'h0;
endmodule

module ColorPalette(
  input  [3:0] io_idx,
  output [3:0] io_out_r,
               io_out_g,
               io_out_b
);

  wire [15:0][3:0] _GEN =
    '{4'hF,
      4'hE,
      4'hD,
      4'hF,
      4'hB,
      4'hA,
      4'h8,
      4'hA,
      4'hE,
      4'hD,
      4'hB,
      4'hF,
      4'h6,
      4'h6,
      4'h5,
      4'h2};
  wire [15:0][3:0] _GEN_0 =
    '{4'hF,
      4'hE,
      4'h9,
      4'hA,
      4'hF,
      4'hF,
      4'h8,
      4'h7,
      4'hE,
      4'hC,
      4'h6,
      4'h9,
      4'hE,
      4'hE,
      4'h5,
      4'h2};
  wire [15:0][3:0] _GEN_1 =
    '{4'hF,
      4'hA,
      4'hF,
      4'hD,
      4'hF,
      4'h7,
      4'hF,
      4'h6,
      4'hE,
      4'h7,
      4'hE,
      4'hB,
      4'hE,
      4'h3,
      4'hF,
      4'h2};
  assign io_out_r = _GEN_1[io_idx];
  assign io_out_g = _GEN_0[io_idx];
  assign io_out_b = _GEN[io_idx];
endmodule

module Console(
  input  [10:0] io_info_x,
                io_info_y,
  input  [15:0] io_charRamData,
  input  [7:0]  io_fontRomData,
  output [13:0] io_charRamAddr,
  output [11:0] io_fontRomAddr,
  output [3:0]  io_out_r,
                io_out_g,
                io_out_b
);

  wire [3:0]  _paletteBg_io_out_r;
  wire [3:0]  _paletteBg_io_out_g;
  wire [3:0]  _paletteBg_io_out_b;
  wire [3:0]  _paletteFg_io_out_r;
  wire [3:0]  _paletteFg_io_out_g;
  wire [3:0]  _paletteFg_io_out_b;
  wire [10:0] _x_T_1 = io_info_x + 11'h2;
  wire [7:0]  _pixelEnable_T_1 = io_fontRomData >> io_info_x[2:0];
  ColorPalette paletteFg (
    .io_idx   (io_charRamData[15:12]),
    .io_out_r (_paletteFg_io_out_r),
    .io_out_g (_paletteFg_io_out_g),
    .io_out_b (_paletteFg_io_out_b)
  );
  ColorPalette paletteBg (
    .io_idx   (io_charRamData[11:8]),
    .io_out_r (_paletteBg_io_out_r),
    .io_out_g (_paletteBg_io_out_g),
    .io_out_b (_paletteBg_io_out_b)
  );
  assign io_charRamAddr = {io_info_y[9:4], _x_T_1[10:3]};
  assign io_fontRomAddr = {io_charRamData[7:0], io_info_y[3:0]};
  assign io_out_r = _pixelEnable_T_1[0] ? _paletteFg_io_out_r : _paletteBg_io_out_r;
  assign io_out_g = _pixelEnable_T_1[0] ? _paletteFg_io_out_g : _paletteBg_io_out_g;
  assign io_out_b = _pixelEnable_T_1[0] ? _paletteFg_io_out_b : _paletteBg_io_out_b;
endmodule

// external module blk_mem_gen_1

module BlockMemory(
  input         clock,
  input  [13:0] io1_addr,
  input  [15:0] io1_dataIn,
  input         io1_write,
  input  [13:0] io2_addr,
  input         io_clockB,
  output [15:0] io1_dataOut,
                io2_dataOut
);

  blk_mem_gen_1 raw (
    .addra (io1_addr),
    .clka  (clock),
    .dina  (io1_dataIn),
    .wea   (io1_write),
    .addrb (io2_addr),
    .clkb  (io_clockB),
    .dinb  (16'h0),
    .web   (1'h0),
    .douta (io1_dataOut),
    .doutb (io2_dataOut)
  );
endmodule

// external module blk_mem_gen_2

module BlockMemoryRom(
  input         clock,
  input  [11:0] io_addr,
  output [7:0]  io_dataOut
);

  blk_mem_gen_2 raw (
    .addra (io_addr),
    .clka  (clock),
    .douta (io_dataOut)
  );
endmodule

module DisplaySubsystem(
  input         clock,
                reset,
                io_vgaClock,
  input  [13:0] io_vgaDataPort_addr,
  input  [15:0] io_vgaDataPort_dataIn,
  input         io_vgaDataPort_write,
  output        io_out_hsync,
                io_out_vsync,
  output [3:0]  io_out_data_r,
                io_out_data_g,
                io_out_data_b,
  output [15:0] io_vgaDataPort_dataOut
);

  wire [7:0]  _fontRom_io_dataOut;
  wire [15:0] _dataMem_io2_dataOut;
  wire [13:0] _console_io_charRamAddr;
  wire [11:0] _console_io_fontRomAddr;
  wire [3:0]  _console_io_out_r;
  wire [3:0]  _console_io_out_g;
  wire [3:0]  _console_io_out_b;
  wire [10:0] _vga_io_info_x;
  wire [10:0] _vga_io_info_y;
  VGATop vga (
    .clock         (io_vgaClock),
    .reset         (reset),
    .io_in_r       (_console_io_out_r),
    .io_in_g       (_console_io_out_g),
    .io_in_b       (_console_io_out_b),
    .io_out_hsync  (io_out_hsync),
    .io_out_vsync  (io_out_vsync),
    .io_out_data_r (io_out_data_r),
    .io_out_data_g (io_out_data_g),
    .io_out_data_b (io_out_data_b),
    .io_info_x     (_vga_io_info_x),
    .io_info_y     (_vga_io_info_y)
  );
  Console console (
    .io_info_x      (_vga_io_info_x),
    .io_info_y      (_vga_io_info_y),
    .io_charRamData (_dataMem_io2_dataOut),
    .io_fontRomData (_fontRom_io_dataOut),
    .io_charRamAddr (_console_io_charRamAddr),
    .io_fontRomAddr (_console_io_fontRomAddr),
    .io_out_r       (_console_io_out_r),
    .io_out_g       (_console_io_out_g),
    .io_out_b       (_console_io_out_b)
  );
  BlockMemory dataMem (
    .clock       (clock),
    .io1_addr    (io_vgaDataPort_addr),
    .io1_dataIn  (io_vgaDataPort_dataIn),
    .io1_write   (io_vgaDataPort_write),
    .io2_addr    (_console_io_charRamAddr),
    .io_clockB   (io_vgaClock),
    .io1_dataOut (io_vgaDataPort_dataOut),
    .io2_dataOut (_dataMem_io2_dataOut)
  );
  BlockMemoryRom fontRom (
    .clock      (io_vgaClock),
    .io_addr    (_console_io_fontRomAddr),
    .io_dataOut (_fontRom_io_dataOut)
  );
endmodule

module BoardDataController(
  input         clock,
                reset,
                outer_uart_rx,
                outer_switches_0,
                outer_switches_1,
                outer_switches_2,
                outer_switches_3,
                outer_switches_4,
                outer_switches_5,
                outer_switches_6,
                outer_switches_7,
                outer_switches_8,
                outer_switches_9,
                outer_switches_10,
                outer_switches_11,
                outer_switches_12,
                outer_switches_13,
                outer_switches_14,
                outer_switches_15,
                outer_switches_16,
                outer_switches_17,
                outer_switches_18,
                outer_switches_19,
                outer_switches_20,
                outer_switches_21,
                outer_switches_22,
                outer_switches_23,
                outer_buttons_up,
                outer_buttons_down,
                outer_buttons_left,
                outer_buttons_right,
                outer_buttons_center,
                outer_keyboard_cols_0,
                outer_keyboard_cols_1,
                outer_keyboard_cols_2,
                outer_keyboard_cols_3,
                outer_interrupt,
                inside_uartOut_valid,
  input  [7:0]  inside_uartOut_bits,
  input         inside_uartIn_ready,
  input  [31:0] inside_regable_tubes_value,
  input         inside_regable_tubes_enables_0,
                inside_regable_tubes_enables_1,
                inside_regable_tubes_enables_2,
                inside_regable_tubes_enables_3,
                inside_regable_tubes_enables_4,
                inside_regable_tubes_enables_5,
                inside_regable_tubes_enables_6,
                inside_regable_tubes_enables_7,
                inside_regable_tubes_mode,
                inside_regable_leds_0,
                inside_regable_leds_1,
                inside_regable_leds_2,
                inside_regable_leds_3,
                inside_regable_leds_4,
                inside_regable_leds_5,
                inside_regable_leds_6,
                inside_regable_leds_7,
                inside_regable_leds_8,
                inside_regable_leds_9,
                inside_regable_leds_10,
                inside_regable_leds_11,
                inside_regable_leds_12,
                inside_regable_leds_13,
                inside_regable_leds_14,
                inside_regable_leds_15,
                inside_regable_leds_16,
                inside_regable_leds_17,
                inside_regable_leds_18,
                inside_regable_leds_19,
                inside_regable_leds_20,
                inside_regable_leds_21,
                inside_regable_leds_22,
                inside_regable_leds_23,
                inside_keyboard_ready,
  input  [13:0] inside_vgaDataPort_addr,
  input  [15:0] inside_vgaDataPort_dataIn,
  input         inside_vgaDataPort_write,
                io_uartClock,
                io_vgaClock,
                io_cpuClock,
  input  [31:0] io_cycles,
                io_originPC,
  output        outer_uart_tx,
                outer_tubes_enable_0,
                outer_tubes_enable_1,
                outer_tubes_enable_2,
                outer_tubes_enable_3,
                outer_tubes_enable_4,
                outer_tubes_enable_5,
                outer_tubes_enable_6,
                outer_tubes_enable_7,
                outer_tubes_tubes_0,
                outer_tubes_tubes_1,
                outer_tubes_tubes_2,
                outer_tubes_tubes_3,
                outer_tubes_tubes_4,
                outer_tubes_tubes_5,
                outer_tubes_tubes_6,
                outer_tubes_tubes_7,
                outer_vga_hsync,
                outer_vga_vsync,
  output [3:0]  outer_vga_data_r,
                outer_vga_data_g,
                outer_vga_data_b,
  output        outer_keyboard_rows_0,
                outer_keyboard_rows_1,
                outer_keyboard_rows_2,
                outer_keyboard_rows_3,
                outer_leds_0,
                outer_leds_1,
                outer_leds_2,
                outer_leds_3,
                outer_leds_4,
                outer_leds_5,
                outer_leds_6,
                outer_leds_7,
                outer_leds_8,
                outer_leds_9,
                outer_leds_10,
                outer_leds_11,
                outer_leds_12,
                outer_leds_13,
                outer_leds_14,
                outer_leds_15,
                outer_leds_16,
                outer_leds_17,
                outer_leds_18,
                outer_leds_19,
                outer_leds_20,
                outer_leds_21,
                outer_leds_22,
                outer_leds_23,
                inside_uartOut_ready,
                inside_uartIn_valid,
  output [7:0]  inside_uartIn_bits,
  output [31:0] inside_cycles,
  output        inside_switches_0,
                inside_switches_1,
                inside_switches_2,
                inside_switches_3,
                inside_switches_4,
                inside_switches_5,
                inside_switches_6,
                inside_switches_7,
                inside_switches_8,
                inside_switches_9,
                inside_switches_10,
                inside_switches_11,
                inside_switches_12,
                inside_switches_13,
                inside_switches_14,
                inside_switches_15,
                inside_switches_16,
                inside_switches_17,
                inside_switches_18,
                inside_switches_19,
                inside_switches_20,
                inside_switches_21,
                inside_switches_22,
                inside_switches_23,
                inside_buttons_up,
                inside_buttons_down,
                inside_buttons_left,
                inside_buttons_right,
                inside_buttons_center,
                inside_keyboard_valid,
  output [3:0]  inside_keyboard_bits,
  output [15:0] inside_vgaDataPort_dataOut,
  output [31:0] inside_originPC,
  output        io_interrupt
);

  wire       _display_io_out_hsync;
  wire       _display_io_out_vsync;
  wire [3:0] _display_io_out_data_r;
  wire [3:0] _display_io_out_data_g;
  wire [3:0] _display_io_out_data_b;
  wire       _keyboard_io_out_valid;
  wire [3:0] _keyboard_io_out_bits;
  reg        outer_vga_REG_hsync;
  reg        outer_vga_REG_vsync;
  reg  [3:0] outer_vga_REG_data_r;
  reg  [3:0] outer_vga_REG_data_g;
  reg  [3:0] outer_vga_REG_data_b;
  always @(posedge clock) begin
    outer_vga_REG_hsync <= _display_io_out_hsync;
    outer_vga_REG_vsync <= _display_io_out_vsync;
    outer_vga_REG_data_r <= _display_io_out_data_r;
    outer_vga_REG_data_g <= _display_io_out_data_g;
    outer_vga_REG_data_b <= _display_io_out_data_b;
  end // always @(posedge)
  Debounce io_interrupt_debounce (
    .clock         (io_cpuClock),
    .reset         (reset),
    .io_in         (outer_interrupt),
    .io_out_out    (/* unused */),
    .io_out_onDown (io_interrupt)
  );
  Debounce debounce (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_0),
    .io_out_out    (inside_switches_0),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_1 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_1),
    .io_out_out    (inside_switches_1),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_2 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_2),
    .io_out_out    (inside_switches_2),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_3 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_3),
    .io_out_out    (inside_switches_3),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_4 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_4),
    .io_out_out    (inside_switches_4),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_5 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_5),
    .io_out_out    (inside_switches_5),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_6 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_6),
    .io_out_out    (inside_switches_6),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_7 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_7),
    .io_out_out    (inside_switches_7),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_8 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_8),
    .io_out_out    (inside_switches_8),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_9 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_9),
    .io_out_out    (inside_switches_9),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_10 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_10),
    .io_out_out    (inside_switches_10),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_11 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_11),
    .io_out_out    (inside_switches_11),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_12 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_12),
    .io_out_out    (inside_switches_12),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_13 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_13),
    .io_out_out    (inside_switches_13),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_14 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_14),
    .io_out_out    (inside_switches_14),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_15 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_15),
    .io_out_out    (inside_switches_15),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_16 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_16),
    .io_out_out    (inside_switches_16),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_17 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_17),
    .io_out_out    (inside_switches_17),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_18 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_18),
    .io_out_out    (inside_switches_18),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_19 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_19),
    .io_out_out    (inside_switches_19),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_20 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_20),
    .io_out_out    (inside_switches_20),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_21 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_21),
    .io_out_out    (inside_switches_21),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_22 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_22),
    .io_out_out    (inside_switches_22),
    .io_out_onDown (/* unused */)
  );
  Debounce debounce_23 (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_switches_23),
    .io_out_out    (inside_switches_23),
    .io_out_onDown (/* unused */)
  );
  Debounce inside_buttons_center_debounce (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_buttons_center),
    .io_out_out    (inside_buttons_center),
    .io_out_onDown (/* unused */)
  );
  Debounce inside_buttons_right_debounce (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_buttons_right),
    .io_out_out    (inside_buttons_right),
    .io_out_onDown (/* unused */)
  );
  Debounce inside_buttons_left_debounce (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_buttons_left),
    .io_out_out    (inside_buttons_left),
    .io_out_onDown (/* unused */)
  );
  Debounce inside_buttons_down_debounce (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_buttons_down),
    .io_out_out    (inside_buttons_down),
    .io_out_onDown (/* unused */)
  );
  Debounce inside_buttons_up_debounce (
    .clock         (clock),
    .reset         (reset),
    .io_in         (outer_buttons_up),
    .io_out_out    (inside_buttons_up),
    .io_out_onDown (/* unused */)
  );
  UARTWrap uart (
    .clock           (clock),
    .reset           (reset),
    .io_pair_rx      (outer_uart_rx),
    .io_dataTx_valid (inside_uartOut_valid),
    .io_dataTx_bits  (inside_uartOut_bits),
    .io_dataRx_ready (inside_uartIn_ready),
    .io_uartClock    (io_uartClock),
    .io_pair_tx      (outer_uart_tx),
    .io_dataTx_ready (inside_uartOut_ready),
    .io_dataRx_valid (inside_uartIn_valid),
    .io_dataRx_bits  (inside_uartIn_bits)
  );
  TubesController tube (
    .clock           (clock),
    .reset           (reset),
    .io_in_value     (inside_regable_tubes_value),
    .io_in_enables_0 (inside_regable_tubes_enables_0),
    .io_in_enables_1 (inside_regable_tubes_enables_1),
    .io_in_enables_2 (inside_regable_tubes_enables_2),
    .io_in_enables_3 (inside_regable_tubes_enables_3),
    .io_in_enables_4 (inside_regable_tubes_enables_4),
    .io_in_enables_5 (inside_regable_tubes_enables_5),
    .io_in_enables_6 (inside_regable_tubes_enables_6),
    .io_in_enables_7 (inside_regable_tubes_enables_7),
    .io_in_mode      (inside_regable_tubes_mode),
    .io_out_enable_0 (outer_tubes_enable_0),
    .io_out_enable_1 (outer_tubes_enable_1),
    .io_out_enable_2 (outer_tubes_enable_2),
    .io_out_enable_3 (outer_tubes_enable_3),
    .io_out_enable_4 (outer_tubes_enable_4),
    .io_out_enable_5 (outer_tubes_enable_5),
    .io_out_enable_6 (outer_tubes_enable_6),
    .io_out_enable_7 (outer_tubes_enable_7),
    .io_out_tubes_0  (outer_tubes_tubes_0),
    .io_out_tubes_1  (outer_tubes_tubes_1),
    .io_out_tubes_2  (outer_tubes_tubes_2),
    .io_out_tubes_3  (outer_tubes_tubes_3),
    .io_out_tubes_4  (outer_tubes_tubes_4),
    .io_out_tubes_5  (outer_tubes_tubes_5),
    .io_out_tubes_6  (outer_tubes_tubes_6),
    .io_out_tubes_7  (outer_tubes_tubes_7)
  );
  Keyboard keyboard (
    .clock        (clock),
    .reset        (reset),
    .io_in_cols_0 (outer_keyboard_cols_0),
    .io_in_cols_1 (outer_keyboard_cols_1),
    .io_in_cols_2 (outer_keyboard_cols_2),
    .io_in_cols_3 (outer_keyboard_cols_3),
    .io_in_rows_0 (outer_keyboard_rows_0),
    .io_in_rows_1 (outer_keyboard_rows_1),
    .io_in_rows_2 (outer_keyboard_rows_2),
    .io_in_rows_3 (outer_keyboard_rows_3),
    .io_out_valid (_keyboard_io_out_valid),
    .io_out_bits  (_keyboard_io_out_bits)
  );
  CrossClockQueue_2 keyboardQueue (
    .reset        (reset),
    .io_enq_valid (_keyboard_io_out_valid),
    .io_enq_bits  (_keyboard_io_out_bits),
    .io_deq_ready (inside_keyboard_ready),
    .io_clkEnq    (clock),
    .io_clkDeq    (clock),
    .io_deq_valid (inside_keyboard_valid),
    .io_deq_bits  (inside_keyboard_bits)
  );
  DisplaySubsystem display (
    .clock                  (clock),
    .reset                  (reset),
    .io_vgaClock            (io_vgaClock),
    .io_vgaDataPort_addr    (inside_vgaDataPort_addr),
    .io_vgaDataPort_dataIn  (inside_vgaDataPort_dataIn),
    .io_vgaDataPort_write   (inside_vgaDataPort_write),
    .io_out_hsync           (_display_io_out_hsync),
    .io_out_vsync           (_display_io_out_vsync),
    .io_out_data_r          (_display_io_out_data_r),
    .io_out_data_g          (_display_io_out_data_g),
    .io_out_data_b          (_display_io_out_data_b),
    .io_vgaDataPort_dataOut (inside_vgaDataPort_dataOut)
  );
  assign outer_vga_hsync = outer_vga_REG_hsync;
  assign outer_vga_vsync = outer_vga_REG_vsync;
  assign outer_vga_data_r = outer_vga_REG_data_r;
  assign outer_vga_data_g = outer_vga_REG_data_g;
  assign outer_vga_data_b = outer_vga_REG_data_b;
  assign outer_leds_0 = inside_regable_leds_0;
  assign outer_leds_1 = inside_regable_leds_1;
  assign outer_leds_2 = inside_regable_leds_2;
  assign outer_leds_3 = inside_regable_leds_3;
  assign outer_leds_4 = inside_regable_leds_4;
  assign outer_leds_5 = inside_regable_leds_5;
  assign outer_leds_6 = inside_regable_leds_6;
  assign outer_leds_7 = inside_regable_leds_7;
  assign outer_leds_8 = inside_regable_leds_8;
  assign outer_leds_9 = inside_regable_leds_9;
  assign outer_leds_10 = inside_regable_leds_10;
  assign outer_leds_11 = inside_regable_leds_11;
  assign outer_leds_12 = inside_regable_leds_12;
  assign outer_leds_13 = inside_regable_leds_13;
  assign outer_leds_14 = inside_regable_leds_14;
  assign outer_leds_15 = inside_regable_leds_15;
  assign outer_leds_16 = inside_regable_leds_16;
  assign outer_leds_17 = inside_regable_leds_17;
  assign outer_leds_18 = inside_regable_leds_18;
  assign outer_leds_19 = inside_regable_leds_19;
  assign outer_leds_20 = inside_regable_leds_20;
  assign outer_leds_21 = inside_regable_leds_21;
  assign outer_leds_22 = inside_regable_leds_22;
  assign outer_leds_23 = inside_regable_leds_23;
  assign inside_cycles = io_cycles;
  assign inside_originPC = io_originPC;
endmodule

module Decoder(
  input  [31:0] io_instruction,
  output [4:0]  io_rs1,
                io_rs2,
                io_rd,
  output        io_regWrite,
  output [31:0] io_imm,
                io_immPc,
  output        io_branch,
                io_jump,
                io_pcUseReg,
                io_pcLink,
                io_useImm,
                io_useALU,
  output [2:0]  io_cmpType,
                io_aluType,
  output        io_memWrite,
                io_memLoad,
  output [1:0]  io_memWidth,
  output        io_memUnsigned
);

  wire        _T = io_instruction[6:0] == 7'h37;
  wire        _T_1 = io_instruction[6:0] == 7'h17;
  wire        _T_2 = io_instruction[6:0] == 7'h6F;
  wire        _T_3 = io_instruction[6:0] == 7'h67;
  wire [19:0] _GEN = {20{io_instruction[31]}};
  wire [31:0] _GEN_0 = {_GEN, io_instruction[31:20]};
  wire        _T_4 = io_instruction[6:0] == 7'h63;
  wire        _T_6 = io_instruction[14:12] == 3'h1;
  wire        _T_7 = io_instruction[14:12] == 3'h4;
  wire        _T_8 = io_instruction[14:12] == 3'h5;
  wire        _T_9 = io_instruction[14:12] == 3'h6;
  wire        _T_11 = io_instruction[6:0] == 7'h3;
  wire        _T_13 = io_instruction[14:12] == 3'h1;
  wire        _T_14 = io_instruction[14:12] == 3'h2;
  wire        _T_15 = io_instruction[14:12] == 3'h4;
  wire        _GEN_1 =
    ~(|(io_instruction[14:12])) | _T_13 | _T_14 | _T_15 | io_instruction[14:12] == 3'h5;
  wire        _T_17 = io_instruction[6:0] == 7'h23;
  wire        _T_19 = io_instruction[14:12] == 3'h1;
  wire        _T_21 = io_instruction[6:0] == 7'h13;
  wire        _T_23 = io_instruction[14:12] == 3'h2;
  wire        _T_24 = io_instruction[14:12] == 3'h3;
  wire        _T_25 = io_instruction[14:12] == 3'h4;
  wire        _T_26 = io_instruction[14:12] == 3'h6;
  wire        _T_28 = io_instruction[14:12] == 3'h1;
  wire        _T_36 = io_instruction[14:12] == 3'h1;
  wire        _T_37 = io_instruction[14:12] == 3'h2;
  wire        _T_38 = io_instruction[14:12] == 3'h3;
  wire        _T_39 = io_instruction[14:12] == 3'h4;
  wire        _T_40 = io_instruction[14:12] == 3'h5;
  wire        _T_43 = io_instruction[14:12] == 3'h6;
  wire        _GEN_2 = _T_2 | _T_3;
  wire        _GEN_3 = _T | _T_1;
  wire        _GEN_4 = _T | _T_1 | _GEN_2;
  wire        _GEN_5 = _T_1 | _T_2;
  wire        _GEN_6 = _T_11 | _T_17;
  assign io_rs1 = _T ? 5'h0 : io_instruction[19:15];
  assign io_rs2 = io_instruction[24:20];
  assign io_rd = io_instruction[11:7];
  assign io_regWrite =
    _GEN_4 | ~_T_4
    & (_T_11
         ? _GEN_1
         : ~_T_17
           & (_T_21
                ? ~(|(io_instruction[14:12])) | _T_23 | _T_24 | _T_25 | _T_26
                  | (&(io_instruction[14:12])) | _T_28 | io_instruction[14:12] == 3'h5
                : io_instruction[6:0] == 7'h33
                  & (~(|(io_instruction[14:12])) | _T_36 | _T_37 | _T_38 | _T_39 | _T_40
                     | _T_43 | (&(io_instruction[14:12])))));
  assign io_imm =
    _GEN_3
      ? {io_instruction[31:12], 12'h0}
      : _GEN_2
          ? 32'h4
          : _T_4
              ? 32'h0
              : _T_11
                  ? _GEN_0
                  : _T_17
                      ? {_GEN, io_instruction[31:25], io_instruction[11:7]}
                      : _T_21 ? _GEN_0 : 32'h0;
  assign io_immPc =
    _T_2
      ? {{12{io_instruction[31]}},
         io_instruction[19:12],
         io_instruction[20],
         io_instruction[30:21],
         1'h0}
      : _T_3
          ? _GEN_0
          : _T_4
              ? {{20{io_instruction[31]}},
                 io_instruction[7],
                 io_instruction[30:25],
                 io_instruction[11:8],
                 1'h0}
              : 32'h0;
  assign io_branch =
    ~_GEN_4 & _T_4
    & (~(|(io_instruction[14:12])) | _T_6 | _T_7 | _T_8 | _T_9
       | (&(io_instruction[14:12])));
  assign io_jump = ~_GEN_3 & (_T_2 | _T_3);
  assign io_pcUseReg = ~_GEN_5 & _T_3;
  assign io_pcLink = ~_T & (_GEN_5 | _T_3);
  assign io_useImm = _GEN_4 | ~_T_4 & (_GEN_6 | _T_21);
  assign io_useALU =
    _GEN_4 | ~_T_4
    & (_GEN_6
       | (_T_21
            ? ~(|(io_instruction[14:12])) | ~_T_23 & ~_T_24
            : ~(|(io_instruction[14:12])) | _T_36 | ~_T_37 & ~_T_38));
  assign io_cmpType =
    _T_4
      ? ((|(io_instruction[14:12]))
           ? (_T_6 ? 3'h1 : _T_7 ? 3'h2 : _T_8 ? 3'h3 : {2'h2, ~_T_9})
           : 3'h0)
      : _GEN_6
          ? 3'h0
          : _T_21
              ? (_T_23 ? 3'h2 : {_T_24, 2'h0})
              : (|(io_instruction[14:12])) ? (_T_37 ? 3'h2 : {_T_38, 2'h0}) : 3'h0;
  assign io_aluType =
    _T | _T_1 | _T_2 | _T_3 | _T_4 | _GEN_6
      ? 3'h0
      : _T_21
          ? ((|(io_instruction[14:12]))
               ? (_T_25
                    ? 3'h2
                    : _T_26
                        ? 3'h3
                        : (&(io_instruction[14:12]))
                            ? 3'h4
                            : _T_28 ? 3'h5 : {2'h3, io_instruction[30]})
               : 3'h0)
          : (|(io_instruction[14:12]))
              ? (_T_36
                   ? 3'h5
                   : _T_39
                       ? 3'h2
                       : _T_40 ? {2'h3, io_instruction[30]} : _T_43 ? 3'h3 : 3'h4)
              : {2'h0, io_instruction[30]};
  assign io_memWrite =
    ~(_T | _T_1 | _T_2 | _T_3 | _T_4 | _T_11) & _T_17
    & (~(|(io_instruction[14:12])) | _T_19 | io_instruction[14:12] == 3'h2);
  assign io_memLoad = ~(_T | _T_1 | _T_2 | _T_3 | _T_4) & _T_11 & _GEN_1;
  assign io_memWidth =
    _T_4
      ? 2'h0
      : _T_11
          ? ((|(io_instruction[14:12]))
               ? (_T_13 ? 2'h1 : _T_14 ? 2'h2 : {1'h0, ~_T_15})
               : 2'h0)
          : _T_17 & (|(io_instruction[14:12])) ? (_T_19 ? 2'h1 : 2'h2) : 2'h0;
  assign io_memUnsigned = ~_T_4 & _T_11 & (|(io_instruction[14:12])) & ~_T_13;
endmodule

module ALU(
  input  [31:0] io_lhs,
                io_rhs,
  input  [4:0]  io_shamt,
  input  [2:0]  io_aluType,
  output [31:0] io_output
);

  wire [62:0]      _io_output_T_12 = {{31{io_lhs[31]}}, io_lhs} << io_shamt;
  wire [31:0]      _GEN = {27'h0, io_shamt};
  wire [7:0][31:0] _GEN_0 =
    {{$signed($signed(io_lhs) >>> _GEN)},
     {io_lhs >> _GEN},
     {_io_output_T_12[31:0]},
     {io_lhs & io_rhs},
     {io_lhs | io_rhs},
     {io_lhs ^ io_rhs},
     {io_lhs - io_rhs},
     {io_lhs + io_rhs}};
  assign io_output = _GEN_0[io_aluType];
endmodule

module ComparatorImpl(
  input         io_equals,
                io_invert,
                io_unsigned,
  input  [31:0] io_lhs,
                io_rhs,
  output        io_output
);

  assign io_output =
    (io_equals
       ? io_lhs == io_rhs
       : io_unsigned ? io_lhs < io_rhs : $signed(io_lhs) < $signed(io_rhs)) ^ io_invert;
endmodule

module Comparator(
  input  [2:0]  io_cmpType,
  input  [31:0] io_lhs,
                io_rhs,
  output        io_output
);

  wire _T_2 = io_cmpType == 3'h0;
  wire _T_5 = io_cmpType == 3'h1;
  wire _T_11 = io_cmpType == 3'h3;
  wire _GEN = io_cmpType != 3'h2;
  ComparatorImpl impl (
    .io_equals   (_T_2 | _T_5),
    .io_invert   (~_T_2 & (_T_5 | _GEN & (_T_11 | io_cmpType != 3'h4))),
    .io_unsigned (_GEN & ~_T_11),
    .io_lhs      (io_lhs),
    .io_rhs      (io_rhs),
    .io_output   (io_output)
  );
endmodule

module RegisterFile(
  input         clock,
  input  [4:0]  io_rs1Addr,
                io_rs2Addr,
                io_rdAddr,
  input  [31:0] io_rdDataIn,
  input         io_write,
  output [31:0] io_rs1Out,
                io_rs2Out
);

  wire [31:0] _mem_ext_R0_data;
  wire [31:0] _mem_ext_R1_data;
  mem_combMem_1 mem_ext (
    .R0_addr (io_rs1Addr),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R1_addr (io_rs2Addr),
    .R1_en   (1'h1),
    .R1_clk  (clock),
    .W0_addr (io_rdAddr),
    .W0_en   (io_write & (|io_rdAddr)),
    .W0_clk  (clock),
    .W0_data (io_rdDataIn),
    .R0_data (_mem_ext_R0_data),
    .R1_data (_mem_ext_R1_data)
  );
  assign io_rs1Out = io_rs1Addr == 5'h0 ? 32'h0 : _mem_ext_R0_data;
  assign io_rs2Out = io_rs2Addr == 5'h0 ? 32'h0 : _mem_ext_R1_data;
endmodule

// external module blk_mem_gen_0

module BlockMemory_1(
  input         clock,
  input  [14:0] io1_addr,
                io2_addr,
  input  [31:0] io2_dataIn,
  input         io2_write,
                io_clockB,
  output [31:0] io1_dataOut,
                io2_dataOut
);

  blk_mem_gen_0 raw (
    .addra (io1_addr),
    .clka  (clock),
    .dina  (32'h0),
    .wea   (1'h0),
    .addrb (io2_addr),
    .clkb  (io_clockB),
    .dinb  (io2_dataIn),
    .web   (io2_write),
    .douta (io1_dataOut),
    .doutb (io2_dataOut)
  );
endmodule

module MaxPeriodGaloisLFSR(
  input  clock,
         reset,
  output io_out_0,
         io_out_1,
         io_out_2,
         io_out_3,
         io_out_4,
         io_out_5,
         io_out_6,
         io_out_7,
         io_out_8,
         io_out_9,
         io_out_10,
         io_out_11,
         io_out_12,
         io_out_13,
         io_out_14,
         io_out_15,
         io_out_16
);

  reg state_0;
  reg state_1;
  reg state_2;
  reg state_3;
  reg state_4;
  reg state_5;
  reg state_6;
  reg state_7;
  reg state_8;
  reg state_9;
  reg state_10;
  reg state_11;
  reg state_12;
  reg state_13;
  reg state_14;
  reg state_15;
  reg state_16;
  always @(posedge clock) begin
    if (reset) begin
      state_0 <= 1'h1;
      state_1 <= 1'h0;
      state_2 <= 1'h0;
      state_3 <= 1'h1;
      state_4 <= 1'h1;
      state_5 <= 1'h1;
      state_6 <= 1'h1;
      state_7 <= 1'h1;
      state_8 <= 1'h1;
      state_9 <= 1'h1;
      state_10 <= 1'h0;
      state_11 <= 1'h0;
      state_12 <= 1'h0;
      state_13 <= 1'h0;
      state_14 <= 1'h0;
      state_15 <= 1'h0;
      state_16 <= 1'h0;
    end
    else begin
      state_0 <= state_1;
      state_1 <= state_2;
      state_2 <= state_3;
      state_3 <= state_4;
      state_4 <= state_5;
      state_5 <= state_6;
      state_6 <= state_7;
      state_7 <= state_8;
      state_8 <= state_9;
      state_9 <= state_10;
      state_10 <= state_11;
      state_11 <= state_12;
      state_12 <= state_13;
      state_13 <= state_14 ^ state_0;
      state_14 <= state_15;
      state_15 <= state_16;
      state_16 <= state_0;
    end
  end // always @(posedge)
  assign io_out_0 = state_0;
  assign io_out_1 = state_1;
  assign io_out_2 = state_2;
  assign io_out_3 = state_3;
  assign io_out_4 = state_4;
  assign io_out_5 = state_5;
  assign io_out_6 = state_6;
  assign io_out_7 = state_7;
  assign io_out_8 = state_8;
  assign io_out_9 = state_9;
  assign io_out_10 = state_10;
  assign io_out_11 = state_11;
  assign io_out_12 = state_12;
  assign io_out_13 = state_13;
  assign io_out_14 = state_14;
  assign io_out_15 = state_15;
  assign io_out_16 = state_16;
endmodule

module MaxPeriodGaloisLFSR_1(
  input  clock,
         reset,
  output io_out_0,
         io_out_1,
         io_out_2,
         io_out_3,
         io_out_4,
         io_out_5,
         io_out_6,
         io_out_7,
         io_out_8,
         io_out_9,
         io_out_10,
         io_out_11,
         io_out_12,
         io_out_13,
         io_out_14,
         io_out_15,
         io_out_16,
         io_out_17,
         io_out_18
);

  reg state_0;
  reg state_1;
  reg state_2;
  reg state_3;
  reg state_4;
  reg state_5;
  reg state_6;
  reg state_7;
  reg state_8;
  reg state_9;
  reg state_10;
  reg state_11;
  reg state_12;
  reg state_13;
  reg state_14;
  reg state_15;
  reg state_16;
  reg state_17;
  reg state_18;
  always @(posedge clock) begin
    if (reset) begin
      state_0 <= 1'h1;
      state_1 <= 1'h0;
      state_2 <= 1'h0;
      state_3 <= 1'h1;
      state_4 <= 1'h1;
      state_5 <= 1'h0;
      state_6 <= 1'h0;
      state_7 <= 1'h0;
      state_8 <= 1'h0;
      state_9 <= 1'h0;
      state_10 <= 1'h0;
      state_11 <= 1'h0;
      state_12 <= 1'h0;
      state_13 <= 1'h0;
      state_14 <= 1'h0;
      state_15 <= 1'h0;
      state_16 <= 1'h0;
      state_17 <= 1'h1;
      state_18 <= 1'h1;
    end
    else begin
      state_0 <= state_1;
      state_1 <= state_2;
      state_2 <= state_3;
      state_3 <= state_4;
      state_4 <= state_5;
      state_5 <= state_6;
      state_6 <= state_7;
      state_7 <= state_8;
      state_8 <= state_9;
      state_9 <= state_10;
      state_10 <= state_11;
      state_11 <= state_12;
      state_12 <= state_13;
      state_13 <= state_14 ^ state_0;
      state_14 <= state_15;
      state_15 <= state_16;
      state_16 <= state_17 ^ state_0;
      state_17 <= state_18 ^ state_0;
      state_18 <= state_0;
    end
  end // always @(posedge)
  assign io_out_0 = state_0;
  assign io_out_1 = state_1;
  assign io_out_2 = state_2;
  assign io_out_3 = state_3;
  assign io_out_4 = state_4;
  assign io_out_5 = state_5;
  assign io_out_6 = state_6;
  assign io_out_7 = state_7;
  assign io_out_8 = state_8;
  assign io_out_9 = state_9;
  assign io_out_10 = state_10;
  assign io_out_11 = state_11;
  assign io_out_12 = state_12;
  assign io_out_13 = state_13;
  assign io_out_14 = state_14;
  assign io_out_15 = state_15;
  assign io_out_16 = state_16;
  assign io_out_17 = state_17;
  assign io_out_18 = state_18;
endmodule

module MaxPeriodGaloisLFSR_2(
  input  clock,
         reset,
  output io_out_0,
         io_out_1,
         io_out_2,
         io_out_3,
         io_out_4,
         io_out_5,
         io_out_6,
         io_out_7,
         io_out_8,
         io_out_9,
         io_out_10,
         io_out_11,
         io_out_12,
         io_out_13,
         io_out_14,
         io_out_15,
         io_out_16,
         io_out_17,
         io_out_18,
         io_out_19,
         io_out_20,
         io_out_21,
         io_out_22
);

  reg state_0;
  reg state_1;
  reg state_2;
  reg state_3;
  reg state_4;
  reg state_5;
  reg state_6;
  reg state_7;
  reg state_8;
  reg state_9;
  reg state_10;
  reg state_11;
  reg state_12;
  reg state_13;
  reg state_14;
  reg state_15;
  reg state_16;
  reg state_17;
  reg state_18;
  reg state_19;
  reg state_20;
  reg state_21;
  reg state_22;
  always @(posedge clock) begin
    if (reset) begin
      state_0 <= 1'h1;
      state_1 <= 1'h0;
      state_2 <= 1'h1;
      state_3 <= 1'h1;
      state_4 <= 1'h0;
      state_5 <= 1'h0;
      state_6 <= 1'h0;
      state_7 <= 1'h0;
      state_8 <= 1'h0;
      state_9 <= 1'h0;
      state_10 <= 1'h0;
      state_11 <= 1'h0;
      state_12 <= 1'h0;
      state_13 <= 1'h0;
      state_14 <= 1'h0;
      state_15 <= 1'h0;
      state_16 <= 1'h0;
      state_17 <= 1'h0;
      state_18 <= 1'h0;
      state_19 <= 1'h0;
      state_20 <= 1'h0;
      state_21 <= 1'h1;
      state_22 <= 1'h1;
    end
    else begin
      state_0 <= state_1;
      state_1 <= state_2;
      state_2 <= state_3;
      state_3 <= state_4;
      state_4 <= state_5;
      state_5 <= state_6;
      state_6 <= state_7;
      state_7 <= state_8;
      state_8 <= state_9;
      state_9 <= state_10;
      state_10 <= state_11;
      state_11 <= state_12;
      state_12 <= state_13;
      state_13 <= state_14;
      state_14 <= state_15;
      state_15 <= state_16;
      state_16 <= state_17;
      state_17 <= state_18 ^ state_0;
      state_18 <= state_19;
      state_19 <= state_20;
      state_20 <= state_21;
      state_21 <= state_22;
      state_22 <= state_0;
    end
  end // always @(posedge)
  assign io_out_0 = state_0;
  assign io_out_1 = state_1;
  assign io_out_2 = state_2;
  assign io_out_3 = state_3;
  assign io_out_4 = state_4;
  assign io_out_5 = state_5;
  assign io_out_6 = state_6;
  assign io_out_7 = state_7;
  assign io_out_8 = state_8;
  assign io_out_9 = state_9;
  assign io_out_10 = state_10;
  assign io_out_11 = state_11;
  assign io_out_12 = state_12;
  assign io_out_13 = state_13;
  assign io_out_14 = state_14;
  assign io_out_15 = state_15;
  assign io_out_16 = state_16;
  assign io_out_17 = state_17;
  assign io_out_18 = state_18;
  assign io_out_19 = state_19;
  assign io_out_20 = state_20;
  assign io_out_21 = state_21;
  assign io_out_22 = state_22;
endmodule

module MaxPeriodGaloisLFSR_3(
  input  clock,
         reset,
  output io_out_0,
         io_out_1,
         io_out_2,
         io_out_3,
         io_out_4,
         io_out_5,
         io_out_6,
         io_out_7,
         io_out_8,
         io_out_9,
         io_out_10,
         io_out_11,
         io_out_12,
         io_out_13,
         io_out_14,
         io_out_15,
         io_out_16,
         io_out_17,
         io_out_18,
         io_out_19,
         io_out_20,
         io_out_21,
         io_out_22,
         io_out_23,
         io_out_24,
         io_out_25,
         io_out_26,
         io_out_27,
         io_out_28
);

  reg state_0;
  reg state_1;
  reg state_2;
  reg state_3;
  reg state_4;
  reg state_5;
  reg state_6;
  reg state_7;
  reg state_8;
  reg state_9;
  reg state_10;
  reg state_11;
  reg state_12;
  reg state_13;
  reg state_14;
  reg state_15;
  reg state_16;
  reg state_17;
  reg state_18;
  reg state_19;
  reg state_20;
  reg state_21;
  reg state_22;
  reg state_23;
  reg state_24;
  reg state_25;
  reg state_26;
  reg state_27;
  reg state_28;
  always @(posedge clock) begin
    if (reset) begin
      state_0 <= 1'h1;
      state_1 <= 1'h0;
      state_2 <= 1'h1;
      state_3 <= 1'h0;
      state_4 <= 1'h0;
      state_5 <= 1'h0;
      state_6 <= 1'h0;
      state_7 <= 1'h0;
      state_8 <= 1'h0;
      state_9 <= 1'h0;
      state_10 <= 1'h0;
      state_11 <= 1'h0;
      state_12 <= 1'h0;
      state_13 <= 1'h0;
      state_14 <= 1'h0;
      state_15 <= 1'h0;
      state_16 <= 1'h0;
      state_17 <= 1'h0;
      state_18 <= 1'h0;
      state_19 <= 1'h0;
      state_20 <= 1'h0;
      state_21 <= 1'h0;
      state_22 <= 1'h0;
      state_23 <= 1'h0;
      state_24 <= 1'h0;
      state_25 <= 1'h0;
      state_26 <= 1'h0;
      state_27 <= 1'h1;
      state_28 <= 1'h1;
    end
    else begin
      state_0 <= state_1;
      state_1 <= state_2;
      state_2 <= state_3;
      state_3 <= state_4;
      state_4 <= state_5;
      state_5 <= state_6;
      state_6 <= state_7;
      state_7 <= state_8;
      state_8 <= state_9;
      state_9 <= state_10;
      state_10 <= state_11;
      state_11 <= state_12;
      state_12 <= state_13;
      state_13 <= state_14;
      state_14 <= state_15;
      state_15 <= state_16;
      state_16 <= state_17;
      state_17 <= state_18;
      state_18 <= state_19;
      state_19 <= state_20;
      state_20 <= state_21;
      state_21 <= state_22;
      state_22 <= state_23;
      state_23 <= state_24;
      state_24 <= state_25;
      state_25 <= state_26;
      state_26 <= state_27 ^ state_0;
      state_27 <= state_28;
      state_28 <= state_0;
    end
  end // always @(posedge)
  assign io_out_0 = state_0;
  assign io_out_1 = state_1;
  assign io_out_2 = state_2;
  assign io_out_3 = state_3;
  assign io_out_4 = state_4;
  assign io_out_5 = state_5;
  assign io_out_6 = state_6;
  assign io_out_7 = state_7;
  assign io_out_8 = state_8;
  assign io_out_9 = state_9;
  assign io_out_10 = state_10;
  assign io_out_11 = state_11;
  assign io_out_12 = state_12;
  assign io_out_13 = state_13;
  assign io_out_14 = state_14;
  assign io_out_15 = state_15;
  assign io_out_16 = state_16;
  assign io_out_17 = state_17;
  assign io_out_18 = state_18;
  assign io_out_19 = state_19;
  assign io_out_20 = state_20;
  assign io_out_21 = state_21;
  assign io_out_22 = state_22;
  assign io_out_23 = state_23;
  assign io_out_24 = state_24;
  assign io_out_25 = state_25;
  assign io_out_26 = state_26;
  assign io_out_27 = state_27;
  assign io_out_28 = state_28;
endmodule

module MemoryDispatch(
  input         clock,
                reset,
  input  [31:0] io_addr,
  input         io_write,
                io_willWrite,
                io_enable,
  input  [31:0] io_dataIn,
  input         io_stage,
  input  [31:0] io_addrPC,
  input         io_external_uartOut_ready,
                io_external_uartIn_valid,
  input  [7:0]  io_external_uartIn_bits,
  input  [31:0] io_external_cycles,
  input         io_external_switches_0,
                io_external_switches_1,
                io_external_switches_2,
                io_external_switches_3,
                io_external_switches_4,
                io_external_switches_5,
                io_external_switches_6,
                io_external_switches_7,
                io_external_switches_8,
                io_external_switches_9,
                io_external_switches_10,
                io_external_switches_11,
                io_external_switches_12,
                io_external_switches_13,
                io_external_switches_14,
                io_external_switches_15,
                io_external_switches_16,
                io_external_switches_17,
                io_external_switches_18,
                io_external_switches_19,
                io_external_switches_20,
                io_external_switches_21,
                io_external_switches_22,
                io_external_switches_23,
                io_external_buttons_up,
                io_external_buttons_down,
                io_external_buttons_left,
                io_external_buttons_right,
                io_external_buttons_center,
                io_external_keyboard_valid,
  input  [3:0]  io_external_keyboard_bits,
  input  [15:0] io_external_vgaDataPort_dataOut,
  input  [31:0] io_external_originPC,
  output [31:0] io_dataOut,
                io_dataPC,
  output        io_external_uartOut_valid,
  output [7:0]  io_external_uartOut_bits,
  output        io_external_uartIn_ready,
  output [31:0] io_external_regable_tubes_value,
  output        io_external_regable_tubes_enables_0,
                io_external_regable_tubes_enables_1,
                io_external_regable_tubes_enables_2,
                io_external_regable_tubes_enables_3,
                io_external_regable_tubes_enables_4,
                io_external_regable_tubes_enables_5,
                io_external_regable_tubes_enables_6,
                io_external_regable_tubes_enables_7,
                io_external_regable_tubes_mode,
                io_external_regable_leds_0,
                io_external_regable_leds_1,
                io_external_regable_leds_2,
                io_external_regable_leds_3,
                io_external_regable_leds_4,
                io_external_regable_leds_5,
                io_external_regable_leds_6,
                io_external_regable_leds_7,
                io_external_regable_leds_8,
                io_external_regable_leds_9,
                io_external_regable_leds_10,
                io_external_regable_leds_11,
                io_external_regable_leds_12,
                io_external_regable_leds_13,
                io_external_regable_leds_14,
                io_external_regable_leds_15,
                io_external_regable_leds_16,
                io_external_regable_leds_17,
                io_external_regable_leds_18,
                io_external_regable_leds_19,
                io_external_regable_leds_20,
                io_external_regable_leds_21,
                io_external_regable_leds_22,
                io_external_regable_leds_23,
                io_external_keyboard_ready,
  output [13:0] io_external_vgaDataPort_addr,
  output [15:0] io_external_vgaDataPort_dataIn,
  output        io_external_vgaDataPort_write
);

  wire        _randomValue_prng_3_io_out_0;
  wire        _randomValue_prng_3_io_out_1;
  wire        _randomValue_prng_3_io_out_2;
  wire        _randomValue_prng_3_io_out_3;
  wire        _randomValue_prng_3_io_out_4;
  wire        _randomValue_prng_3_io_out_5;
  wire        _randomValue_prng_3_io_out_6;
  wire        _randomValue_prng_3_io_out_7;
  wire        _randomValue_prng_2_io_out_0;
  wire        _randomValue_prng_2_io_out_1;
  wire        _randomValue_prng_2_io_out_2;
  wire        _randomValue_prng_2_io_out_3;
  wire        _randomValue_prng_2_io_out_4;
  wire        _randomValue_prng_2_io_out_5;
  wire        _randomValue_prng_2_io_out_6;
  wire        _randomValue_prng_2_io_out_7;
  wire        _randomValue_prng_1_io_out_0;
  wire        _randomValue_prng_1_io_out_1;
  wire        _randomValue_prng_1_io_out_2;
  wire        _randomValue_prng_1_io_out_3;
  wire        _randomValue_prng_1_io_out_4;
  wire        _randomValue_prng_1_io_out_5;
  wire        _randomValue_prng_1_io_out_6;
  wire        _randomValue_prng_1_io_out_7;
  wire        _randomValue_prng_io_out_0;
  wire        _randomValue_prng_io_out_1;
  wire        _randomValue_prng_io_out_2;
  wire        _randomValue_prng_io_out_3;
  wire        _randomValue_prng_io_out_4;
  wire        _randomValue_prng_io_out_5;
  wire        _randomValue_prng_io_out_6;
  wire        _randomValue_prng_io_out_7;
  wire [31:0] _mem_io2_dataOut;
  reg  [31:0] dequeueData;
  reg  [31:0] externalReg_tubes_value;
  reg         externalReg_tubes_enables_0;
  reg         externalReg_tubes_enables_1;
  reg         externalReg_tubes_enables_2;
  reg         externalReg_tubes_enables_3;
  reg         externalReg_tubes_enables_4;
  reg         externalReg_tubes_enables_5;
  reg         externalReg_tubes_enables_6;
  reg         externalReg_tubes_enables_7;
  reg         externalReg_tubes_mode;
  reg         externalReg_leds_0;
  reg         externalReg_leds_1;
  reg         externalReg_leds_2;
  reg         externalReg_leds_3;
  reg         externalReg_leds_4;
  reg         externalReg_leds_5;
  reg         externalReg_leds_6;
  reg         externalReg_leds_7;
  reg         externalReg_leds_8;
  reg         externalReg_leds_9;
  reg         externalReg_leds_10;
  reg         externalReg_leds_11;
  reg         externalReg_leds_12;
  reg         externalReg_leds_13;
  reg         externalReg_leds_14;
  reg         externalReg_leds_15;
  reg         externalReg_leds_16;
  reg         externalReg_leds_17;
  reg         externalReg_leds_18;
  reg         externalReg_leds_19;
  reg         externalReg_leds_20;
  reg         externalReg_leds_21;
  reg         externalReg_leds_22;
  reg         externalReg_leds_23;
  wire        shouldReadDequeue = io_enable & ~io_willWrite & ~io_stage;
  reg  [31:0] randomValue;
  wire        _T = io_addr == 32'hFFFFF000;
  wire        _T_1 = shouldReadDequeue & io_external_uartIn_valid;
  wire        _T_2 = io_addr == 32'hFFFFF004;
  wire        _T_6 = io_addr == 32'hFFFFF008;
  wire        _T_7 = io_addr == 32'hFFFFF00C;
  wire        _T_8 = io_addr == 32'hFFFFF010;
  wire        _T_9 = io_addr == 32'hFFFFF014;
  wire        _T_10 = shouldReadDequeue & io_external_keyboard_valid;
  wire        _GEN = _T_2 | _T_6 | _T_7 | _T_8;
  wire        _T_11 = io_addr == 32'hFFFFF018;
  wire        _T_12 = io_addr == 32'hFFFFF01C;
  wire        _T_13 = io_addr == 32'hFFFFF020;
  wire        _T_14 = io_addr == 32'hFFFFF024;
  wire        _T_15 = io_addr == 32'hFFFFF028;
  wire        _T_16 = io_addr == 32'hFFFFF02C;
  wire        _T_17 = io_addr == 32'hFFFFF030;
  wire        _T_18 = io_addr == 32'hFFFFF034;
  wire        _T_19 = io_addr == 32'hFFFFF038;
  wire        _T_20 = io_addr == 32'hFFFFF03C;
  wire        _T_30 = io_addr == 32'hFFFFF040;
  wire        _T_31 = io_addr == 32'hFFFFF044;
  wire        _T_33 = io_addr[31:16] == 16'hFFFD;
  wire        _T_35 = io_addr[31:16] == 16'hFFFE;
  wire        _T_37 = io_addr[31:8] == 24'hFFFFF1;
  wire [31:0] _GEN_0 =
    {{io_external_switches_0},
     {io_external_switches_0},
     {io_external_switches_0},
     {io_external_switches_0},
     {io_external_switches_0},
     {io_external_switches_0},
     {io_external_switches_0},
     {io_external_switches_0},
     {io_external_switches_23},
     {io_external_switches_22},
     {io_external_switches_21},
     {io_external_switches_20},
     {io_external_switches_19},
     {io_external_switches_18},
     {io_external_switches_17},
     {io_external_switches_16},
     {io_external_switches_15},
     {io_external_switches_14},
     {io_external_switches_13},
     {io_external_switches_12},
     {io_external_switches_11},
     {io_external_switches_10},
     {io_external_switches_9},
     {io_external_switches_8},
     {io_external_switches_7},
     {io_external_switches_6},
     {io_external_switches_5},
     {io_external_switches_4},
     {io_external_switches_3},
     {io_external_switches_2},
     {io_external_switches_1},
     {io_external_switches_0}};
  wire        _T_40 = io_addr[31:8] == 24'hFFFFF2;
  always @(posedge clock) begin
    if (reset) begin
      dequeueData <= 32'h0;
      externalReg_tubes_value <= 32'h0;
      externalReg_tubes_enables_0 <= 1'h0;
      externalReg_tubes_enables_1 <= 1'h0;
      externalReg_tubes_enables_2 <= 1'h0;
      externalReg_tubes_enables_3 <= 1'h0;
      externalReg_tubes_enables_4 <= 1'h0;
      externalReg_tubes_enables_5 <= 1'h0;
      externalReg_tubes_enables_6 <= 1'h0;
      externalReg_tubes_enables_7 <= 1'h0;
      externalReg_tubes_mode <= 1'h0;
      externalReg_leds_0 <= 1'h0;
      externalReg_leds_1 <= 1'h0;
      externalReg_leds_2 <= 1'h0;
      externalReg_leds_3 <= 1'h0;
      externalReg_leds_4 <= 1'h0;
      externalReg_leds_5 <= 1'h0;
      externalReg_leds_6 <= 1'h0;
      externalReg_leds_7 <= 1'h0;
      externalReg_leds_8 <= 1'h0;
      externalReg_leds_9 <= 1'h0;
      externalReg_leds_10 <= 1'h0;
      externalReg_leds_11 <= 1'h0;
      externalReg_leds_12 <= 1'h0;
      externalReg_leds_13 <= 1'h0;
      externalReg_leds_14 <= 1'h0;
      externalReg_leds_15 <= 1'h0;
      externalReg_leds_16 <= 1'h0;
      externalReg_leds_17 <= 1'h0;
      externalReg_leds_18 <= 1'h0;
      externalReg_leds_19 <= 1'h0;
      externalReg_leds_20 <= 1'h0;
      externalReg_leds_21 <= 1'h0;
      externalReg_leds_22 <= 1'h0;
      externalReg_leds_23 <= 1'h0;
    end
    else begin
      automatic logic _T_41 = io_addr[7:2] < 6'h18;
      automatic logic _GEN_1 =
        _T | _T_2 | _T_6 | _T_7 | _T_8 | _T_9 | _T_11 | _T_12 | _T_13 | _T_14 | _T_15
        | _T_16 | _T_17 | _T_18 | _T_19 | _T_20 | _T_30 | _T_31 | _T_33 | _T_35 | _T_37;
      if (_T) begin
        if (_T_1)
          dequeueData <= {24'h0, io_external_uartIn_bits};
      end
      else if (_GEN | ~(_T_9 & _T_10)) begin
      end
      else
        dequeueData <= {28'h0, io_external_keyboard_bits};
      if (_T | _T_2 | _T_6 | _T_7 | _T_8 | _T_9 | _T_11 | _T_12 | _T_13 | _T_14 | _T_15
          | _T_16 | _T_17 | _T_18 | ~_T_19) begin
      end
      else
        externalReg_tubes_value <= io_dataIn;
      if (_T | _T_2 | _T_6 | _T_7 | _T_8 | _T_9 | _T_11 | _T_12 | _T_13 | _T_14 | _T_15
          | _T_16 | _T_17 | _T_18 | _T_19 | ~_T_20) begin
      end
      else begin
        externalReg_tubes_enables_0 <= io_dataIn[0];
        externalReg_tubes_enables_1 <= io_dataIn[1];
        externalReg_tubes_enables_2 <= io_dataIn[2];
        externalReg_tubes_enables_3 <= io_dataIn[3];
        externalReg_tubes_enables_4 <= io_dataIn[4];
        externalReg_tubes_enables_5 <= io_dataIn[5];
        externalReg_tubes_enables_6 <= io_dataIn[6];
        externalReg_tubes_enables_7 <= io_dataIn[7];
      end
      if (_T | _T_2 | _T_6 | _T_7 | _T_8 | _T_9 | _T_11 | _T_12 | _T_13 | _T_14 | _T_15
          | _T_16 | ~_T_17) begin
      end
      else
        externalReg_tubes_mode <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h0)) begin
      end
      else
        externalReg_leds_0 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h1)) begin
      end
      else
        externalReg_leds_1 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h2)) begin
      end
      else
        externalReg_leds_2 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h3)) begin
      end
      else
        externalReg_leds_3 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h4)) begin
      end
      else
        externalReg_leds_4 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h5)) begin
      end
      else
        externalReg_leds_5 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h6)) begin
      end
      else
        externalReg_leds_6 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h7)) begin
      end
      else
        externalReg_leds_7 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h8)) begin
      end
      else
        externalReg_leds_8 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h9)) begin
      end
      else
        externalReg_leds_9 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'hA)) begin
      end
      else
        externalReg_leds_10 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'hB)) begin
      end
      else
        externalReg_leds_11 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'hC)) begin
      end
      else
        externalReg_leds_12 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'hD)) begin
      end
      else
        externalReg_leds_13 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'hE)) begin
      end
      else
        externalReg_leds_14 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'hF)) begin
      end
      else
        externalReg_leds_15 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h10)) begin
      end
      else
        externalReg_leds_16 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h11)) begin
      end
      else
        externalReg_leds_17 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h12)) begin
      end
      else
        externalReg_leds_18 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h13)) begin
      end
      else
        externalReg_leds_19 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h14)) begin
      end
      else
        externalReg_leds_20 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h15)) begin
      end
      else
        externalReg_leds_21 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h16)) begin
      end
      else
        externalReg_leds_22 <= io_dataIn[0];
      if (_GEN_1 | ~(_T_40 & _T_41 & io_addr[6:2] == 5'h17)) begin
      end
      else
        externalReg_leds_23 <= io_dataIn[0];
    end
    randomValue <=
      {_randomValue_prng_3_io_out_7,
       _randomValue_prng_3_io_out_6,
       _randomValue_prng_3_io_out_5,
       _randomValue_prng_3_io_out_4,
       _randomValue_prng_3_io_out_3,
       _randomValue_prng_3_io_out_2,
       _randomValue_prng_3_io_out_1,
       _randomValue_prng_3_io_out_0,
       _randomValue_prng_2_io_out_7,
       _randomValue_prng_2_io_out_6,
       _randomValue_prng_2_io_out_5,
       _randomValue_prng_2_io_out_4,
       _randomValue_prng_2_io_out_3,
       _randomValue_prng_2_io_out_2,
       _randomValue_prng_2_io_out_1,
       _randomValue_prng_2_io_out_0,
       _randomValue_prng_1_io_out_7,
       _randomValue_prng_1_io_out_6,
       _randomValue_prng_1_io_out_5,
       _randomValue_prng_1_io_out_4,
       _randomValue_prng_1_io_out_3,
       _randomValue_prng_1_io_out_2,
       _randomValue_prng_1_io_out_1,
       _randomValue_prng_1_io_out_0,
       _randomValue_prng_io_out_7,
       _randomValue_prng_io_out_6,
       _randomValue_prng_io_out_5,
       _randomValue_prng_io_out_4,
       _randomValue_prng_io_out_3,
       _randomValue_prng_io_out_2,
       _randomValue_prng_io_out_1,
       _randomValue_prng_io_out_0};
  end // always @(posedge)
  BlockMemory_1 mem (
    .clock       (clock),
    .io1_addr    (io_addrPC[16:2]),
    .io2_addr    (io_addr[16:2]),
    .io2_dataIn  (io_dataIn),
    .io2_write
      (~(_T | _T_2 | _T_6 | _T_7 | _T_8 | _T_9 | _T_11 | _T_12 | _T_13 | _T_14 | _T_15
         | _T_16 | _T_17 | _T_18 | _T_19 | _T_20 | _T_30 | _T_31 | _T_33 | _T_35 | _T_37
         | _T_40) & io_enable & io_write),
    .io_clockB   (clock),
    .io1_dataOut (io_dataPC),
    .io2_dataOut (_mem_io2_dataOut)
  );
  MaxPeriodGaloisLFSR randomValue_prng (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_randomValue_prng_io_out_0),
    .io_out_1  (_randomValue_prng_io_out_1),
    .io_out_2  (_randomValue_prng_io_out_2),
    .io_out_3  (_randomValue_prng_io_out_3),
    .io_out_4  (_randomValue_prng_io_out_4),
    .io_out_5  (_randomValue_prng_io_out_5),
    .io_out_6  (_randomValue_prng_io_out_6),
    .io_out_7  (_randomValue_prng_io_out_7),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */),
    .io_out_15 (/* unused */),
    .io_out_16 (/* unused */)
  );
  MaxPeriodGaloisLFSR_1 randomValue_prng_1 (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_randomValue_prng_1_io_out_0),
    .io_out_1  (_randomValue_prng_1_io_out_1),
    .io_out_2  (_randomValue_prng_1_io_out_2),
    .io_out_3  (_randomValue_prng_1_io_out_3),
    .io_out_4  (_randomValue_prng_1_io_out_4),
    .io_out_5  (_randomValue_prng_1_io_out_5),
    .io_out_6  (_randomValue_prng_1_io_out_6),
    .io_out_7  (_randomValue_prng_1_io_out_7),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */),
    .io_out_15 (/* unused */),
    .io_out_16 (/* unused */),
    .io_out_17 (/* unused */),
    .io_out_18 (/* unused */)
  );
  MaxPeriodGaloisLFSR_2 randomValue_prng_2 (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_randomValue_prng_2_io_out_0),
    .io_out_1  (_randomValue_prng_2_io_out_1),
    .io_out_2  (_randomValue_prng_2_io_out_2),
    .io_out_3  (_randomValue_prng_2_io_out_3),
    .io_out_4  (_randomValue_prng_2_io_out_4),
    .io_out_5  (_randomValue_prng_2_io_out_5),
    .io_out_6  (_randomValue_prng_2_io_out_6),
    .io_out_7  (_randomValue_prng_2_io_out_7),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */),
    .io_out_15 (/* unused */),
    .io_out_16 (/* unused */),
    .io_out_17 (/* unused */),
    .io_out_18 (/* unused */),
    .io_out_19 (/* unused */),
    .io_out_20 (/* unused */),
    .io_out_21 (/* unused */),
    .io_out_22 (/* unused */)
  );
  MaxPeriodGaloisLFSR_3 randomValue_prng_3 (
    .clock     (clock),
    .reset     (reset),
    .io_out_0  (_randomValue_prng_3_io_out_0),
    .io_out_1  (_randomValue_prng_3_io_out_1),
    .io_out_2  (_randomValue_prng_3_io_out_2),
    .io_out_3  (_randomValue_prng_3_io_out_3),
    .io_out_4  (_randomValue_prng_3_io_out_4),
    .io_out_5  (_randomValue_prng_3_io_out_5),
    .io_out_6  (_randomValue_prng_3_io_out_6),
    .io_out_7  (_randomValue_prng_3_io_out_7),
    .io_out_8  (/* unused */),
    .io_out_9  (/* unused */),
    .io_out_10 (/* unused */),
    .io_out_11 (/* unused */),
    .io_out_12 (/* unused */),
    .io_out_13 (/* unused */),
    .io_out_14 (/* unused */),
    .io_out_15 (/* unused */),
    .io_out_16 (/* unused */),
    .io_out_17 (/* unused */),
    .io_out_18 (/* unused */),
    .io_out_19 (/* unused */),
    .io_out_20 (/* unused */),
    .io_out_21 (/* unused */),
    .io_out_22 (/* unused */),
    .io_out_23 (/* unused */),
    .io_out_24 (/* unused */),
    .io_out_25 (/* unused */),
    .io_out_26 (/* unused */),
    .io_out_27 (/* unused */),
    .io_out_28 (/* unused */)
  );
  assign io_dataOut =
    _T
      ? dequeueData
      : _T_2
          ? 32'h0
          : _T_6
              ? {31'h0, io_external_uartIn_valid}
              : _T_7
                  ? {31'h0, io_external_uartOut_ready}
                  : _T_8
                      ? io_external_cycles
                      : _T_9
                          ? dequeueData
                          : _T_11
                              ? {31'h0, io_external_keyboard_valid}
                              : _T_12
                                  ? {31'h0, io_external_buttons_center}
                                  : _T_13
                                      ? {31'h0, io_external_buttons_up}
                                      : _T_14
                                          ? {31'h0, io_external_buttons_down}
                                          : _T_15
                                              ? {31'h0, io_external_buttons_left}
                                              : _T_16
                                                  ? {31'h0, io_external_buttons_right}
                                                  : _T_17 | _T_18 | _T_19 | _T_20
                                                      ? 32'h0
                                                      : _T_30
                                                          ? io_external_originPC
                                                          : _T_31
                                                              ? randomValue
                                                              : _T_33
                                                                  ? {24'h0,
                                                                     io_external_vgaDataPort_dataOut[7:0]}
                                                                  : _T_35
                                                                      ? {24'h0,
                                                                         io_external_vgaDataPort_dataOut[11:8],
                                                                         io_external_vgaDataPort_dataOut[15:12]}
                                                                      : _T_37
                                                                          ? (io_addr[7:2] < 6'h18
                                                                               ? {31'h0,
                                                                                  _GEN_0[io_addr[6:2]]}
                                                                               : 32'h0)
                                                                          : _T_40
                                                                            | ~io_enable
                                                                              ? 32'h0
                                                                              : _mem_io2_dataOut;
  assign io_external_uartOut_valid =
    ~_T & _T_2 & io_enable & io_write & io_external_uartOut_ready;
  assign io_external_uartOut_bits = io_dataIn[7:0];
  assign io_external_uartIn_ready = _T & _T_1;
  assign io_external_regable_tubes_value = externalReg_tubes_value;
  assign io_external_regable_tubes_enables_0 = externalReg_tubes_enables_0;
  assign io_external_regable_tubes_enables_1 = externalReg_tubes_enables_1;
  assign io_external_regable_tubes_enables_2 = externalReg_tubes_enables_2;
  assign io_external_regable_tubes_enables_3 = externalReg_tubes_enables_3;
  assign io_external_regable_tubes_enables_4 = externalReg_tubes_enables_4;
  assign io_external_regable_tubes_enables_5 = externalReg_tubes_enables_5;
  assign io_external_regable_tubes_enables_6 = externalReg_tubes_enables_6;
  assign io_external_regable_tubes_enables_7 = externalReg_tubes_enables_7;
  assign io_external_regable_tubes_mode = externalReg_tubes_mode;
  assign io_external_regable_leds_0 = externalReg_leds_0;
  assign io_external_regable_leds_1 = externalReg_leds_1;
  assign io_external_regable_leds_2 = externalReg_leds_2;
  assign io_external_regable_leds_3 = externalReg_leds_3;
  assign io_external_regable_leds_4 = externalReg_leds_4;
  assign io_external_regable_leds_5 = externalReg_leds_5;
  assign io_external_regable_leds_6 = externalReg_leds_6;
  assign io_external_regable_leds_7 = externalReg_leds_7;
  assign io_external_regable_leds_8 = externalReg_leds_8;
  assign io_external_regable_leds_9 = externalReg_leds_9;
  assign io_external_regable_leds_10 = externalReg_leds_10;
  assign io_external_regable_leds_11 = externalReg_leds_11;
  assign io_external_regable_leds_12 = externalReg_leds_12;
  assign io_external_regable_leds_13 = externalReg_leds_13;
  assign io_external_regable_leds_14 = externalReg_leds_14;
  assign io_external_regable_leds_15 = externalReg_leds_15;
  assign io_external_regable_leds_16 = externalReg_leds_16;
  assign io_external_regable_leds_17 = externalReg_leds_17;
  assign io_external_regable_leds_18 = externalReg_leds_18;
  assign io_external_regable_leds_19 = externalReg_leds_19;
  assign io_external_regable_leds_20 = externalReg_leds_20;
  assign io_external_regable_leds_21 = externalReg_leds_21;
  assign io_external_regable_leds_22 = externalReg_leds_22;
  assign io_external_regable_leds_23 = externalReg_leds_23;
  assign io_external_keyboard_ready = ~(_T | _GEN) & _T_9 & _T_10;
  assign io_external_vgaDataPort_addr = _T_33 ? io_addr[15:2] : io_addr[15:2];
  assign io_external_vgaDataPort_dataIn =
    _T_33
      ? {io_external_vgaDataPort_dataOut[15:8], io_dataIn[7:0]}
      : {io_dataIn[3:0], io_dataIn[7:4], io_external_vgaDataPort_dataOut[7:0]};
  assign io_external_vgaDataPort_write =
    ~(_T | _T_2 | _T_6 | _T_7 | _T_8 | _T_9 | _T_11 | _T_12 | _T_13 | _T_14 | _T_15
      | _T_16 | _T_17 | _T_18 | _T_19 | _T_20 | _T_30 | _T_31) & (_T_33 | _T_35)
    & io_write;
endmodule

module Memory(
  input         clock,
                reset,
  input  [31:0] io_addr,
  input  [1:0]  io_memWidth,
  input         io_write,
                io_willWrite,
                io_enable,
  input  [31:0] io_dataIn,
  input         io_unsigned,
                io_stage,
  input  [31:0] io_addrPC,
  input         io_external_uartOut_ready,
                io_external_uartIn_valid,
  input  [7:0]  io_external_uartIn_bits,
  input  [31:0] io_external_cycles,
  input         io_external_switches_0,
                io_external_switches_1,
                io_external_switches_2,
                io_external_switches_3,
                io_external_switches_4,
                io_external_switches_5,
                io_external_switches_6,
                io_external_switches_7,
                io_external_switches_8,
                io_external_switches_9,
                io_external_switches_10,
                io_external_switches_11,
                io_external_switches_12,
                io_external_switches_13,
                io_external_switches_14,
                io_external_switches_15,
                io_external_switches_16,
                io_external_switches_17,
                io_external_switches_18,
                io_external_switches_19,
                io_external_switches_20,
                io_external_switches_21,
                io_external_switches_22,
                io_external_switches_23,
                io_external_buttons_up,
                io_external_buttons_down,
                io_external_buttons_left,
                io_external_buttons_right,
                io_external_buttons_center,
                io_external_keyboard_valid,
  input  [3:0]  io_external_keyboard_bits,
  input  [15:0] io_external_vgaDataPort_dataOut,
  input  [31:0] io_external_originPC,
  output [31:0] io_dataOut,
                io_dataPC,
  output        io_external_uartOut_valid,
  output [7:0]  io_external_uartOut_bits,
  output        io_external_uartIn_ready,
  output [31:0] io_external_regable_tubes_value,
  output        io_external_regable_tubes_enables_0,
                io_external_regable_tubes_enables_1,
                io_external_regable_tubes_enables_2,
                io_external_regable_tubes_enables_3,
                io_external_regable_tubes_enables_4,
                io_external_regable_tubes_enables_5,
                io_external_regable_tubes_enables_6,
                io_external_regable_tubes_enables_7,
                io_external_regable_tubes_mode,
                io_external_regable_leds_0,
                io_external_regable_leds_1,
                io_external_regable_leds_2,
                io_external_regable_leds_3,
                io_external_regable_leds_4,
                io_external_regable_leds_5,
                io_external_regable_leds_6,
                io_external_regable_leds_7,
                io_external_regable_leds_8,
                io_external_regable_leds_9,
                io_external_regable_leds_10,
                io_external_regable_leds_11,
                io_external_regable_leds_12,
                io_external_regable_leds_13,
                io_external_regable_leds_14,
                io_external_regable_leds_15,
                io_external_regable_leds_16,
                io_external_regable_leds_17,
                io_external_regable_leds_18,
                io_external_regable_leds_19,
                io_external_regable_leds_20,
                io_external_regable_leds_21,
                io_external_regable_leds_22,
                io_external_regable_leds_23,
                io_external_keyboard_ready,
  output [13:0] io_external_vgaDataPort_addr,
  output [15:0] io_external_vgaDataPort_dataIn,
  output        io_external_vgaDataPort_write
);

  wire [31:0]     _inner_io_dataOut;
  wire            _T_2 = io_memWidth == 2'h2;
  wire            _T_5 = io_memWidth == 2'h1;
  wire            _T_8 = io_memWidth == 2'h0;
  wire [7:0]      _GEN =
    _T_5
      ? (io_addr[1] ? _inner_io_dataOut[7:0] : io_dataIn[7:0])
      : _T_8 & io_addr[1:0] == 2'h0 ? io_dataIn[7:0] : _inner_io_dataOut[7:0];
  wire [7:0]      port_0 =
    io_write ? (_T_2 ? io_dataIn[7:0] : _GEN) : _inner_io_dataOut[7:0];
  wire [7:0]      _GEN_0 =
    _T_5
      ? (io_addr[1] ? _inner_io_dataOut[15:8] : io_dataIn[15:8])
      : _T_8 & io_addr[1:0] == 2'h1 ? io_dataIn[7:0] : _inner_io_dataOut[15:8];
  wire [7:0]      port_1 =
    io_write ? (_T_2 ? io_dataIn[15:8] : _GEN_0) : _inner_io_dataOut[15:8];
  wire [7:0]      _GEN_1 =
    (_T_5 ? io_addr[1] : _T_8 & io_addr[1:0] == 2'h2)
      ? io_dataIn[7:0]
      : _inner_io_dataOut[23:16];
  wire [7:0]      port_2 =
    io_write ? (_T_2 ? io_dataIn[23:16] : _GEN_1) : _inner_io_dataOut[23:16];
  wire [7:0]      _GEN_2 =
    _T_5
      ? (io_addr[1] ? io_dataIn[15:8] : _inner_io_dataOut[31:24])
      : _T_8 & (&(io_addr[1:0])) ? io_dataIn[7:0] : _inner_io_dataOut[31:24];
  wire [7:0]      port_3 =
    io_write ? (_T_2 ? io_dataIn[31:24] : _GEN_2) : _inner_io_dataOut[31:24];
  wire [3:0][7:0] _GEN_3 =
    io_write
      ? (_T_2
           ? {{io_dataIn[31:24]}, {io_dataIn[23:16]}, {io_dataIn[15:8]}, {io_dataIn[7:0]}}
           : {{_GEN_2}, {_GEN_1}, {_GEN_0}, {_GEN}})
      : {{_inner_io_dataOut[31:24]},
         {_inner_io_dataOut[23:16]},
         {_inner_io_dataOut[15:8]},
         {_inner_io_dataOut[7:0]}};
  wire [7:0]      _GEN_4 = _GEN_3[{io_addr[1], 1'h1}];
  wire [7:0]      _GEN_5 = _GEN_3[io_addr[1:0]];
  MemoryDispatch inner (
    .clock                               (clock),
    .reset                               (reset),
    .io_addr                             (io_addr),
    .io_write                            (io_write),
    .io_willWrite                        (io_willWrite),
    .io_enable                           (io_enable),
    .io_dataIn                           ({port_3, port_2, port_1, port_0}),
    .io_stage                            (io_stage),
    .io_addrPC                           (io_addrPC),
    .io_external_uartOut_ready           (io_external_uartOut_ready),
    .io_external_uartIn_valid            (io_external_uartIn_valid),
    .io_external_uartIn_bits             (io_external_uartIn_bits),
    .io_external_cycles                  (io_external_cycles),
    .io_external_switches_0              (io_external_switches_0),
    .io_external_switches_1              (io_external_switches_1),
    .io_external_switches_2              (io_external_switches_2),
    .io_external_switches_3              (io_external_switches_3),
    .io_external_switches_4              (io_external_switches_4),
    .io_external_switches_5              (io_external_switches_5),
    .io_external_switches_6              (io_external_switches_6),
    .io_external_switches_7              (io_external_switches_7),
    .io_external_switches_8              (io_external_switches_8),
    .io_external_switches_9              (io_external_switches_9),
    .io_external_switches_10             (io_external_switches_10),
    .io_external_switches_11             (io_external_switches_11),
    .io_external_switches_12             (io_external_switches_12),
    .io_external_switches_13             (io_external_switches_13),
    .io_external_switches_14             (io_external_switches_14),
    .io_external_switches_15             (io_external_switches_15),
    .io_external_switches_16             (io_external_switches_16),
    .io_external_switches_17             (io_external_switches_17),
    .io_external_switches_18             (io_external_switches_18),
    .io_external_switches_19             (io_external_switches_19),
    .io_external_switches_20             (io_external_switches_20),
    .io_external_switches_21             (io_external_switches_21),
    .io_external_switches_22             (io_external_switches_22),
    .io_external_switches_23             (io_external_switches_23),
    .io_external_buttons_up              (io_external_buttons_up),
    .io_external_buttons_down            (io_external_buttons_down),
    .io_external_buttons_left            (io_external_buttons_left),
    .io_external_buttons_right           (io_external_buttons_right),
    .io_external_buttons_center          (io_external_buttons_center),
    .io_external_keyboard_valid          (io_external_keyboard_valid),
    .io_external_keyboard_bits           (io_external_keyboard_bits),
    .io_external_vgaDataPort_dataOut     (io_external_vgaDataPort_dataOut),
    .io_external_originPC                (io_external_originPC),
    .io_dataOut                          (_inner_io_dataOut),
    .io_dataPC                           (io_dataPC),
    .io_external_uartOut_valid           (io_external_uartOut_valid),
    .io_external_uartOut_bits            (io_external_uartOut_bits),
    .io_external_uartIn_ready            (io_external_uartIn_ready),
    .io_external_regable_tubes_value     (io_external_regable_tubes_value),
    .io_external_regable_tubes_enables_0 (io_external_regable_tubes_enables_0),
    .io_external_regable_tubes_enables_1 (io_external_regable_tubes_enables_1),
    .io_external_regable_tubes_enables_2 (io_external_regable_tubes_enables_2),
    .io_external_regable_tubes_enables_3 (io_external_regable_tubes_enables_3),
    .io_external_regable_tubes_enables_4 (io_external_regable_tubes_enables_4),
    .io_external_regable_tubes_enables_5 (io_external_regable_tubes_enables_5),
    .io_external_regable_tubes_enables_6 (io_external_regable_tubes_enables_6),
    .io_external_regable_tubes_enables_7 (io_external_regable_tubes_enables_7),
    .io_external_regable_tubes_mode      (io_external_regable_tubes_mode),
    .io_external_regable_leds_0          (io_external_regable_leds_0),
    .io_external_regable_leds_1          (io_external_regable_leds_1),
    .io_external_regable_leds_2          (io_external_regable_leds_2),
    .io_external_regable_leds_3          (io_external_regable_leds_3),
    .io_external_regable_leds_4          (io_external_regable_leds_4),
    .io_external_regable_leds_5          (io_external_regable_leds_5),
    .io_external_regable_leds_6          (io_external_regable_leds_6),
    .io_external_regable_leds_7          (io_external_regable_leds_7),
    .io_external_regable_leds_8          (io_external_regable_leds_8),
    .io_external_regable_leds_9          (io_external_regable_leds_9),
    .io_external_regable_leds_10         (io_external_regable_leds_10),
    .io_external_regable_leds_11         (io_external_regable_leds_11),
    .io_external_regable_leds_12         (io_external_regable_leds_12),
    .io_external_regable_leds_13         (io_external_regable_leds_13),
    .io_external_regable_leds_14         (io_external_regable_leds_14),
    .io_external_regable_leds_15         (io_external_regable_leds_15),
    .io_external_regable_leds_16         (io_external_regable_leds_16),
    .io_external_regable_leds_17         (io_external_regable_leds_17),
    .io_external_regable_leds_18         (io_external_regable_leds_18),
    .io_external_regable_leds_19         (io_external_regable_leds_19),
    .io_external_regable_leds_20         (io_external_regable_leds_20),
    .io_external_regable_leds_21         (io_external_regable_leds_21),
    .io_external_regable_leds_22         (io_external_regable_leds_22),
    .io_external_regable_leds_23         (io_external_regable_leds_23),
    .io_external_keyboard_ready          (io_external_keyboard_ready),
    .io_external_vgaDataPort_addr        (io_external_vgaDataPort_addr),
    .io_external_vgaDataPort_dataIn      (io_external_vgaDataPort_dataIn),
    .io_external_vgaDataPort_write       (io_external_vgaDataPort_write)
  );
  assign io_dataOut =
    io_memWidth == 2'h2
      ? {port_3, port_2, port_1, port_0}
      : io_memWidth == 2'h1
          ? {io_unsigned ? 16'h0 : {16{_GEN_4[7]}}, _GEN_4, _GEN_3[{io_addr[1], 1'h0}]}
          : {io_unsigned ? 24'h0 : {24{_GEN_5[7]}}, _GEN_5};
endmodule

module Core(
  input         clock,
                reset,
                io_external_uartOut_ready,
                io_external_uartIn_valid,
  input  [7:0]  io_external_uartIn_bits,
  input  [31:0] io_external_cycles,
  input         io_external_switches_0,
                io_external_switches_1,
                io_external_switches_2,
                io_external_switches_3,
                io_external_switches_4,
                io_external_switches_5,
                io_external_switches_6,
                io_external_switches_7,
                io_external_switches_8,
                io_external_switches_9,
                io_external_switches_10,
                io_external_switches_11,
                io_external_switches_12,
                io_external_switches_13,
                io_external_switches_14,
                io_external_switches_15,
                io_external_switches_16,
                io_external_switches_17,
                io_external_switches_18,
                io_external_switches_19,
                io_external_switches_20,
                io_external_switches_21,
                io_external_switches_22,
                io_external_switches_23,
                io_external_buttons_up,
                io_external_buttons_down,
                io_external_buttons_left,
                io_external_buttons_right,
                io_external_buttons_center,
                io_external_keyboard_valid,
  input  [3:0]  io_external_keyboard_bits,
  input  [15:0] io_external_vgaDataPort_dataOut,
  input  [31:0] io_external_originPC,
  input         io_interrupt,
  output [31:0] io_cycles,
  output        io_external_uartOut_valid,
  output [7:0]  io_external_uartOut_bits,
  output        io_external_uartIn_ready,
  output [31:0] io_external_regable_tubes_value,
  output        io_external_regable_tubes_enables_0,
                io_external_regable_tubes_enables_1,
                io_external_regable_tubes_enables_2,
                io_external_regable_tubes_enables_3,
                io_external_regable_tubes_enables_4,
                io_external_regable_tubes_enables_5,
                io_external_regable_tubes_enables_6,
                io_external_regable_tubes_enables_7,
                io_external_regable_tubes_mode,
                io_external_regable_leds_0,
                io_external_regable_leds_1,
                io_external_regable_leds_2,
                io_external_regable_leds_3,
                io_external_regable_leds_4,
                io_external_regable_leds_5,
                io_external_regable_leds_6,
                io_external_regable_leds_7,
                io_external_regable_leds_8,
                io_external_regable_leds_9,
                io_external_regable_leds_10,
                io_external_regable_leds_11,
                io_external_regable_leds_12,
                io_external_regable_leds_13,
                io_external_regable_leds_14,
                io_external_regable_leds_15,
                io_external_regable_leds_16,
                io_external_regable_leds_17,
                io_external_regable_leds_18,
                io_external_regable_leds_19,
                io_external_regable_leds_20,
                io_external_regable_leds_21,
                io_external_regable_leds_22,
                io_external_regable_leds_23,
                io_external_keyboard_ready,
  output [13:0] io_external_vgaDataPort_addr,
  output [15:0] io_external_vgaDataPort_dataIn,
  output        io_external_vgaDataPort_write,
  output [31:0] io_originPC
);

  wire [31:0] exeResult;
  wire [31:0] _mem_io_dataOut;
  wire [31:0] _mem_io_dataPC;
  wire [31:0] _reg_io_rs1Out;
  wire [31:0] _reg_io_rs2Out;
  wire        _cmp_io_output;
  wire [31:0] _alu_io_output;
  wire [4:0]  _id_io_rs1;
  wire [4:0]  _id_io_rs2;
  wire [4:0]  _id_io_rd;
  wire        _id_io_regWrite;
  wire [31:0] _id_io_imm;
  wire [31:0] _id_io_immPc;
  wire        _id_io_branch;
  wire        _id_io_jump;
  wire        _id_io_pcUseReg;
  wire        _id_io_pcLink;
  wire        _id_io_useImm;
  wire        _id_io_useALU;
  wire [2:0]  _id_io_cmpType;
  wire [2:0]  _id_io_aluType;
  wire        _id_io_memWrite;
  wire        _id_io_memLoad;
  wire [1:0]  _id_io_memWidth;
  wire        _id_io_memUnsigned;
  reg  [31:0] cycles;
  reg         stage;
  reg  [31:0] pc;
  reg  [31:0] pcOld;
  reg  [31:0] originPC;
  assign exeResult = _id_io_useALU ? _alu_io_output : {31'h0, _cmp_io_output};
  always @(posedge clock) begin
    if (reset) begin
      cycles <= 32'h0;
      stage <= 1'h1;
      pc <= 32'h0;
      pcOld <= 32'h0;
      originPC <= 32'h0;
    end
    else begin
      if (stage)
        cycles <= cycles + 32'h1;
      stage <= ~stage;
      if (stage) begin
      end
      else begin
        if (io_interrupt)
          pc <= 32'h0;
        else if (_cmp_io_output & _id_io_branch | _id_io_jump)
          pc <= (_id_io_pcUseReg ? _reg_io_rs1Out : pc) + _id_io_immPc;
        else
          pc <= pc + 32'h4;
        pcOld <= pc;
      end
      if (stage | ~io_interrupt) begin
      end
      else
        originPC <= pc;
    end
  end // always @(posedge)
  Decoder id (
    .io_instruction (_mem_io_dataPC),
    .io_rs1         (_id_io_rs1),
    .io_rs2         (_id_io_rs2),
    .io_rd          (_id_io_rd),
    .io_regWrite    (_id_io_regWrite),
    .io_imm         (_id_io_imm),
    .io_immPc       (_id_io_immPc),
    .io_branch      (_id_io_branch),
    .io_jump        (_id_io_jump),
    .io_pcUseReg    (_id_io_pcUseReg),
    .io_pcLink      (_id_io_pcLink),
    .io_useImm      (_id_io_useImm),
    .io_useALU      (_id_io_useALU),
    .io_cmpType     (_id_io_cmpType),
    .io_aluType     (_id_io_aluType),
    .io_memWrite    (_id_io_memWrite),
    .io_memLoad     (_id_io_memLoad),
    .io_memWidth    (_id_io_memWidth),
    .io_memUnsigned (_id_io_memUnsigned)
  );
  ALU alu (
    .io_lhs     (_id_io_pcLink ? pcOld : _reg_io_rs1Out),
    .io_rhs     (_reg_io_rs2Out),
    .io_shamt   (_id_io_useImm ? _id_io_rs2 : _reg_io_rs2Out[4:0]),
    .io_aluType (_id_io_aluType),
    .io_output  (_alu_io_output)
  );
  Comparator cmp (
    .io_cmpType (_id_io_cmpType),
    .io_lhs     (_reg_io_rs1Out),
    .io_rhs     (_id_io_useImm ? _id_io_imm : _reg_io_rs2Out),
    .io_output  (_cmp_io_output)
  );
  RegisterFile reg_0 (
    .clock       (clock),
    .io_rs1Addr  (_id_io_rs1),
    .io_rs2Addr  (_id_io_rs2),
    .io_rdAddr   (_id_io_rd),
    .io_rdDataIn (_id_io_memLoad ? _mem_io_dataOut : exeResult),
    .io_write    (_id_io_regWrite & stage),
    .io_rs1Out   (_reg_io_rs1Out),
    .io_rs2Out   (_reg_io_rs2Out)
  );
  Memory mem (
    .clock                               (clock),
    .reset                               (reset),
    .io_addr                             (exeResult),
    .io_memWidth                         (_id_io_memWidth),
    .io_write                            (_id_io_memWrite & stage),
    .io_willWrite                        (_id_io_memWrite),
    .io_enable                           (_id_io_memLoad | _id_io_memWrite),
    .io_dataIn                           (_reg_io_rs2Out),
    .io_unsigned                         (_id_io_memUnsigned),
    .io_stage                            (stage),
    .io_addrPC                           (pc),
    .io_external_uartOut_ready           (io_external_uartOut_ready),
    .io_external_uartIn_valid            (io_external_uartIn_valid),
    .io_external_uartIn_bits             (io_external_uartIn_bits),
    .io_external_cycles                  (io_external_cycles),
    .io_external_switches_0              (io_external_switches_0),
    .io_external_switches_1              (io_external_switches_1),
    .io_external_switches_2              (io_external_switches_2),
    .io_external_switches_3              (io_external_switches_3),
    .io_external_switches_4              (io_external_switches_4),
    .io_external_switches_5              (io_external_switches_5),
    .io_external_switches_6              (io_external_switches_6),
    .io_external_switches_7              (io_external_switches_7),
    .io_external_switches_8              (io_external_switches_8),
    .io_external_switches_9              (io_external_switches_9),
    .io_external_switches_10             (io_external_switches_10),
    .io_external_switches_11             (io_external_switches_11),
    .io_external_switches_12             (io_external_switches_12),
    .io_external_switches_13             (io_external_switches_13),
    .io_external_switches_14             (io_external_switches_14),
    .io_external_switches_15             (io_external_switches_15),
    .io_external_switches_16             (io_external_switches_16),
    .io_external_switches_17             (io_external_switches_17),
    .io_external_switches_18             (io_external_switches_18),
    .io_external_switches_19             (io_external_switches_19),
    .io_external_switches_20             (io_external_switches_20),
    .io_external_switches_21             (io_external_switches_21),
    .io_external_switches_22             (io_external_switches_22),
    .io_external_switches_23             (io_external_switches_23),
    .io_external_buttons_up              (io_external_buttons_up),
    .io_external_buttons_down            (io_external_buttons_down),
    .io_external_buttons_left            (io_external_buttons_left),
    .io_external_buttons_right           (io_external_buttons_right),
    .io_external_buttons_center          (io_external_buttons_center),
    .io_external_keyboard_valid          (io_external_keyboard_valid),
    .io_external_keyboard_bits           (io_external_keyboard_bits),
    .io_external_vgaDataPort_dataOut     (io_external_vgaDataPort_dataOut),
    .io_external_originPC                (io_external_originPC),
    .io_dataOut                          (_mem_io_dataOut),
    .io_dataPC                           (_mem_io_dataPC),
    .io_external_uartOut_valid           (io_external_uartOut_valid),
    .io_external_uartOut_bits            (io_external_uartOut_bits),
    .io_external_uartIn_ready            (io_external_uartIn_ready),
    .io_external_regable_tubes_value     (io_external_regable_tubes_value),
    .io_external_regable_tubes_enables_0 (io_external_regable_tubes_enables_0),
    .io_external_regable_tubes_enables_1 (io_external_regable_tubes_enables_1),
    .io_external_regable_tubes_enables_2 (io_external_regable_tubes_enables_2),
    .io_external_regable_tubes_enables_3 (io_external_regable_tubes_enables_3),
    .io_external_regable_tubes_enables_4 (io_external_regable_tubes_enables_4),
    .io_external_regable_tubes_enables_5 (io_external_regable_tubes_enables_5),
    .io_external_regable_tubes_enables_6 (io_external_regable_tubes_enables_6),
    .io_external_regable_tubes_enables_7 (io_external_regable_tubes_enables_7),
    .io_external_regable_tubes_mode      (io_external_regable_tubes_mode),
    .io_external_regable_leds_0          (io_external_regable_leds_0),
    .io_external_regable_leds_1          (io_external_regable_leds_1),
    .io_external_regable_leds_2          (io_external_regable_leds_2),
    .io_external_regable_leds_3          (io_external_regable_leds_3),
    .io_external_regable_leds_4          (io_external_regable_leds_4),
    .io_external_regable_leds_5          (io_external_regable_leds_5),
    .io_external_regable_leds_6          (io_external_regable_leds_6),
    .io_external_regable_leds_7          (io_external_regable_leds_7),
    .io_external_regable_leds_8          (io_external_regable_leds_8),
    .io_external_regable_leds_9          (io_external_regable_leds_9),
    .io_external_regable_leds_10         (io_external_regable_leds_10),
    .io_external_regable_leds_11         (io_external_regable_leds_11),
    .io_external_regable_leds_12         (io_external_regable_leds_12),
    .io_external_regable_leds_13         (io_external_regable_leds_13),
    .io_external_regable_leds_14         (io_external_regable_leds_14),
    .io_external_regable_leds_15         (io_external_regable_leds_15),
    .io_external_regable_leds_16         (io_external_regable_leds_16),
    .io_external_regable_leds_17         (io_external_regable_leds_17),
    .io_external_regable_leds_18         (io_external_regable_leds_18),
    .io_external_regable_leds_19         (io_external_regable_leds_19),
    .io_external_regable_leds_20         (io_external_regable_leds_20),
    .io_external_regable_leds_21         (io_external_regable_leds_21),
    .io_external_regable_leds_22         (io_external_regable_leds_22),
    .io_external_regable_leds_23         (io_external_regable_leds_23),
    .io_external_keyboard_ready          (io_external_keyboard_ready),
    .io_external_vgaDataPort_addr        (io_external_vgaDataPort_addr),
    .io_external_vgaDataPort_dataIn      (io_external_vgaDataPort_dataIn),
    .io_external_vgaDataPort_write       (io_external_vgaDataPort_write)
  );
  assign io_cycles = cycles;
  assign io_originPC = originPC;
endmodule

module Top(
  input        clock,
               reset,
               out_uart_rx,
               out_switches_0,
               out_switches_1,
               out_switches_2,
               out_switches_3,
               out_switches_4,
               out_switches_5,
               out_switches_6,
               out_switches_7,
               out_switches_8,
               out_switches_9,
               out_switches_10,
               out_switches_11,
               out_switches_12,
               out_switches_13,
               out_switches_14,
               out_switches_15,
               out_switches_16,
               out_switches_17,
               out_switches_18,
               out_switches_19,
               out_switches_20,
               out_switches_21,
               out_switches_22,
               out_switches_23,
               out_buttons_up,
               out_buttons_down,
               out_buttons_left,
               out_buttons_right,
               out_buttons_center,
               out_keyboard_cols_0,
               out_keyboard_cols_1,
               out_keyboard_cols_2,
               out_keyboard_cols_3,
               out_interrupt,
  output       out_uart_tx,
               out_tubes_enable_0,
               out_tubes_enable_1,
               out_tubes_enable_2,
               out_tubes_enable_3,
               out_tubes_enable_4,
               out_tubes_enable_5,
               out_tubes_enable_6,
               out_tubes_enable_7,
               out_tubes_tubes_0,
               out_tubes_tubes_1,
               out_tubes_tubes_2,
               out_tubes_tubes_3,
               out_tubes_tubes_4,
               out_tubes_tubes_5,
               out_tubes_tubes_6,
               out_tubes_tubes_7,
               out_vga_hsync,
               out_vga_vsync,
  output [3:0] out_vga_data_r,
               out_vga_data_g,
               out_vga_data_b,
  output       out_keyboard_rows_0,
               out_keyboard_rows_1,
               out_keyboard_rows_2,
               out_keyboard_rows_3,
               out_leds_0,
               out_leds_1,
               out_leds_2,
               out_leds_3,
               out_leds_4,
               out_leds_5,
               out_leds_6,
               out_leds_7,
               out_leds_8,
               out_leds_9,
               out_leds_10,
               out_leds_11,
               out_leds_12,
               out_leds_13,
               out_leds_14,
               out_leds_15,
               out_leds_16,
               out_leds_17,
               out_leds_18,
               out_leds_19,
               out_leds_20,
               out_leds_21,
               out_leds_22,
               out_leds_23
);

  wire [31:0] _core_io_cycles;
  wire        _core_io_external_uartOut_valid;
  wire [7:0]  _core_io_external_uartOut_bits;
  wire        _core_io_external_uartIn_ready;
  wire [31:0] _core_io_external_regable_tubes_value;
  wire        _core_io_external_regable_tubes_enables_0;
  wire        _core_io_external_regable_tubes_enables_1;
  wire        _core_io_external_regable_tubes_enables_2;
  wire        _core_io_external_regable_tubes_enables_3;
  wire        _core_io_external_regable_tubes_enables_4;
  wire        _core_io_external_regable_tubes_enables_5;
  wire        _core_io_external_regable_tubes_enables_6;
  wire        _core_io_external_regable_tubes_enables_7;
  wire        _core_io_external_regable_tubes_mode;
  wire        _core_io_external_regable_leds_0;
  wire        _core_io_external_regable_leds_1;
  wire        _core_io_external_regable_leds_2;
  wire        _core_io_external_regable_leds_3;
  wire        _core_io_external_regable_leds_4;
  wire        _core_io_external_regable_leds_5;
  wire        _core_io_external_regable_leds_6;
  wire        _core_io_external_regable_leds_7;
  wire        _core_io_external_regable_leds_8;
  wire        _core_io_external_regable_leds_9;
  wire        _core_io_external_regable_leds_10;
  wire        _core_io_external_regable_leds_11;
  wire        _core_io_external_regable_leds_12;
  wire        _core_io_external_regable_leds_13;
  wire        _core_io_external_regable_leds_14;
  wire        _core_io_external_regable_leds_15;
  wire        _core_io_external_regable_leds_16;
  wire        _core_io_external_regable_leds_17;
  wire        _core_io_external_regable_leds_18;
  wire        _core_io_external_regable_leds_19;
  wire        _core_io_external_regable_leds_20;
  wire        _core_io_external_regable_leds_21;
  wire        _core_io_external_regable_leds_22;
  wire        _core_io_external_regable_leds_23;
  wire        _core_io_external_keyboard_ready;
  wire [13:0] _core_io_external_vgaDataPort_addr;
  wire [15:0] _core_io_external_vgaDataPort_dataIn;
  wire        _core_io_external_vgaDataPort_write;
  wire [31:0] _core_io_originPC;
  wire        _board_inside_uartOut_ready;
  wire        _board_inside_uartIn_valid;
  wire [7:0]  _board_inside_uartIn_bits;
  wire [31:0] _board_inside_cycles;
  wire        _board_inside_switches_0;
  wire        _board_inside_switches_1;
  wire        _board_inside_switches_2;
  wire        _board_inside_switches_3;
  wire        _board_inside_switches_4;
  wire        _board_inside_switches_5;
  wire        _board_inside_switches_6;
  wire        _board_inside_switches_7;
  wire        _board_inside_switches_8;
  wire        _board_inside_switches_9;
  wire        _board_inside_switches_10;
  wire        _board_inside_switches_11;
  wire        _board_inside_switches_12;
  wire        _board_inside_switches_13;
  wire        _board_inside_switches_14;
  wire        _board_inside_switches_15;
  wire        _board_inside_switches_16;
  wire        _board_inside_switches_17;
  wire        _board_inside_switches_18;
  wire        _board_inside_switches_19;
  wire        _board_inside_switches_20;
  wire        _board_inside_switches_21;
  wire        _board_inside_switches_22;
  wire        _board_inside_switches_23;
  wire        _board_inside_buttons_up;
  wire        _board_inside_buttons_down;
  wire        _board_inside_buttons_left;
  wire        _board_inside_buttons_right;
  wire        _board_inside_buttons_center;
  wire        _board_inside_keyboard_valid;
  wire [3:0]  _board_inside_keyboard_bits;
  wire [15:0] _board_inside_vgaDataPort_dataOut;
  wire [31:0] _board_inside_originPC;
  wire        _board_io_interrupt;
  wire        _clocks_io_clockCpu;
  wire        _clocks_io_clockVga;
  wire        _clocks_io_clockUart;
  wire        _clocks_io_reset;
  ClockWizard clocks (
    .clock        (clock),
    .reset        (reset),
    .io_clockCpu  (_clocks_io_clockCpu),
    .io_clockVga  (_clocks_io_clockVga),
    .io_clockUart (_clocks_io_clockUart),
    .io_reset     (_clocks_io_reset)
  );
  BoardDataController board (
    .clock                          (_clocks_io_clockCpu),
    .reset                          (_clocks_io_reset),
    .outer_uart_rx                  (out_uart_rx),
    .outer_switches_0               (out_switches_0),
    .outer_switches_1               (out_switches_1),
    .outer_switches_2               (out_switches_2),
    .outer_switches_3               (out_switches_3),
    .outer_switches_4               (out_switches_4),
    .outer_switches_5               (out_switches_5),
    .outer_switches_6               (out_switches_6),
    .outer_switches_7               (out_switches_7),
    .outer_switches_8               (out_switches_8),
    .outer_switches_9               (out_switches_9),
    .outer_switches_10              (out_switches_10),
    .outer_switches_11              (out_switches_11),
    .outer_switches_12              (out_switches_12),
    .outer_switches_13              (out_switches_13),
    .outer_switches_14              (out_switches_14),
    .outer_switches_15              (out_switches_15),
    .outer_switches_16              (out_switches_16),
    .outer_switches_17              (out_switches_17),
    .outer_switches_18              (out_switches_18),
    .outer_switches_19              (out_switches_19),
    .outer_switches_20              (out_switches_20),
    .outer_switches_21              (out_switches_21),
    .outer_switches_22              (out_switches_22),
    .outer_switches_23              (out_switches_23),
    .outer_buttons_up               (out_buttons_up),
    .outer_buttons_down             (out_buttons_down),
    .outer_buttons_left             (out_buttons_left),
    .outer_buttons_right            (out_buttons_right),
    .outer_buttons_center           (out_buttons_center),
    .outer_keyboard_cols_0          (out_keyboard_cols_0),
    .outer_keyboard_cols_1          (out_keyboard_cols_1),
    .outer_keyboard_cols_2          (out_keyboard_cols_2),
    .outer_keyboard_cols_3          (out_keyboard_cols_3),
    .outer_interrupt                (out_interrupt),
    .inside_uartOut_valid           (_core_io_external_uartOut_valid),
    .inside_uartOut_bits            (_core_io_external_uartOut_bits),
    .inside_uartIn_ready            (_core_io_external_uartIn_ready),
    .inside_regable_tubes_value     (_core_io_external_regable_tubes_value),
    .inside_regable_tubes_enables_0 (_core_io_external_regable_tubes_enables_0),
    .inside_regable_tubes_enables_1 (_core_io_external_regable_tubes_enables_1),
    .inside_regable_tubes_enables_2 (_core_io_external_regable_tubes_enables_2),
    .inside_regable_tubes_enables_3 (_core_io_external_regable_tubes_enables_3),
    .inside_regable_tubes_enables_4 (_core_io_external_regable_tubes_enables_4),
    .inside_regable_tubes_enables_5 (_core_io_external_regable_tubes_enables_5),
    .inside_regable_tubes_enables_6 (_core_io_external_regable_tubes_enables_6),
    .inside_regable_tubes_enables_7 (_core_io_external_regable_tubes_enables_7),
    .inside_regable_tubes_mode      (_core_io_external_regable_tubes_mode),
    .inside_regable_leds_0          (_core_io_external_regable_leds_0),
    .inside_regable_leds_1          (_core_io_external_regable_leds_1),
    .inside_regable_leds_2          (_core_io_external_regable_leds_2),
    .inside_regable_leds_3          (_core_io_external_regable_leds_3),
    .inside_regable_leds_4          (_core_io_external_regable_leds_4),
    .inside_regable_leds_5          (_core_io_external_regable_leds_5),
    .inside_regable_leds_6          (_core_io_external_regable_leds_6),
    .inside_regable_leds_7          (_core_io_external_regable_leds_7),
    .inside_regable_leds_8          (_core_io_external_regable_leds_8),
    .inside_regable_leds_9          (_core_io_external_regable_leds_9),
    .inside_regable_leds_10         (_core_io_external_regable_leds_10),
    .inside_regable_leds_11         (_core_io_external_regable_leds_11),
    .inside_regable_leds_12         (_core_io_external_regable_leds_12),
    .inside_regable_leds_13         (_core_io_external_regable_leds_13),
    .inside_regable_leds_14         (_core_io_external_regable_leds_14),
    .inside_regable_leds_15         (_core_io_external_regable_leds_15),
    .inside_regable_leds_16         (_core_io_external_regable_leds_16),
    .inside_regable_leds_17         (_core_io_external_regable_leds_17),
    .inside_regable_leds_18         (_core_io_external_regable_leds_18),
    .inside_regable_leds_19         (_core_io_external_regable_leds_19),
    .inside_regable_leds_20         (_core_io_external_regable_leds_20),
    .inside_regable_leds_21         (_core_io_external_regable_leds_21),
    .inside_regable_leds_22         (_core_io_external_regable_leds_22),
    .inside_regable_leds_23         (_core_io_external_regable_leds_23),
    .inside_keyboard_ready          (_core_io_external_keyboard_ready),
    .inside_vgaDataPort_addr        (_core_io_external_vgaDataPort_addr),
    .inside_vgaDataPort_dataIn      (_core_io_external_vgaDataPort_dataIn),
    .inside_vgaDataPort_write       (_core_io_external_vgaDataPort_write),
    .io_uartClock                   (_clocks_io_clockUart),
    .io_vgaClock                    (_clocks_io_clockVga),
    .io_cpuClock                    (_clocks_io_clockCpu),
    .io_cycles                      (_core_io_cycles),
    .io_originPC                    (_core_io_originPC),
    .outer_uart_tx                  (out_uart_tx),
    .outer_tubes_enable_0           (out_tubes_enable_0),
    .outer_tubes_enable_1           (out_tubes_enable_1),
    .outer_tubes_enable_2           (out_tubes_enable_2),
    .outer_tubes_enable_3           (out_tubes_enable_3),
    .outer_tubes_enable_4           (out_tubes_enable_4),
    .outer_tubes_enable_5           (out_tubes_enable_5),
    .outer_tubes_enable_6           (out_tubes_enable_6),
    .outer_tubes_enable_7           (out_tubes_enable_7),
    .outer_tubes_tubes_0            (out_tubes_tubes_0),
    .outer_tubes_tubes_1            (out_tubes_tubes_1),
    .outer_tubes_tubes_2            (out_tubes_tubes_2),
    .outer_tubes_tubes_3            (out_tubes_tubes_3),
    .outer_tubes_tubes_4            (out_tubes_tubes_4),
    .outer_tubes_tubes_5            (out_tubes_tubes_5),
    .outer_tubes_tubes_6            (out_tubes_tubes_6),
    .outer_tubes_tubes_7            (out_tubes_tubes_7),
    .outer_vga_hsync                (out_vga_hsync),
    .outer_vga_vsync                (out_vga_vsync),
    .outer_vga_data_r               (out_vga_data_r),
    .outer_vga_data_g               (out_vga_data_g),
    .outer_vga_data_b               (out_vga_data_b),
    .outer_keyboard_rows_0          (out_keyboard_rows_0),
    .outer_keyboard_rows_1          (out_keyboard_rows_1),
    .outer_keyboard_rows_2          (out_keyboard_rows_2),
    .outer_keyboard_rows_3          (out_keyboard_rows_3),
    .outer_leds_0                   (out_leds_0),
    .outer_leds_1                   (out_leds_1),
    .outer_leds_2                   (out_leds_2),
    .outer_leds_3                   (out_leds_3),
    .outer_leds_4                   (out_leds_4),
    .outer_leds_5                   (out_leds_5),
    .outer_leds_6                   (out_leds_6),
    .outer_leds_7                   (out_leds_7),
    .outer_leds_8                   (out_leds_8),
    .outer_leds_9                   (out_leds_9),
    .outer_leds_10                  (out_leds_10),
    .outer_leds_11                  (out_leds_11),
    .outer_leds_12                  (out_leds_12),
    .outer_leds_13                  (out_leds_13),
    .outer_leds_14                  (out_leds_14),
    .outer_leds_15                  (out_leds_15),
    .outer_leds_16                  (out_leds_16),
    .outer_leds_17                  (out_leds_17),
    .outer_leds_18                  (out_leds_18),
    .outer_leds_19                  (out_leds_19),
    .outer_leds_20                  (out_leds_20),
    .outer_leds_21                  (out_leds_21),
    .outer_leds_22                  (out_leds_22),
    .outer_leds_23                  (out_leds_23),
    .inside_uartOut_ready           (_board_inside_uartOut_ready),
    .inside_uartIn_valid            (_board_inside_uartIn_valid),
    .inside_uartIn_bits             (_board_inside_uartIn_bits),
    .inside_cycles                  (_board_inside_cycles),
    .inside_switches_0              (_board_inside_switches_0),
    .inside_switches_1              (_board_inside_switches_1),
    .inside_switches_2              (_board_inside_switches_2),
    .inside_switches_3              (_board_inside_switches_3),
    .inside_switches_4              (_board_inside_switches_4),
    .inside_switches_5              (_board_inside_switches_5),
    .inside_switches_6              (_board_inside_switches_6),
    .inside_switches_7              (_board_inside_switches_7),
    .inside_switches_8              (_board_inside_switches_8),
    .inside_switches_9              (_board_inside_switches_9),
    .inside_switches_10             (_board_inside_switches_10),
    .inside_switches_11             (_board_inside_switches_11),
    .inside_switches_12             (_board_inside_switches_12),
    .inside_switches_13             (_board_inside_switches_13),
    .inside_switches_14             (_board_inside_switches_14),
    .inside_switches_15             (_board_inside_switches_15),
    .inside_switches_16             (_board_inside_switches_16),
    .inside_switches_17             (_board_inside_switches_17),
    .inside_switches_18             (_board_inside_switches_18),
    .inside_switches_19             (_board_inside_switches_19),
    .inside_switches_20             (_board_inside_switches_20),
    .inside_switches_21             (_board_inside_switches_21),
    .inside_switches_22             (_board_inside_switches_22),
    .inside_switches_23             (_board_inside_switches_23),
    .inside_buttons_up              (_board_inside_buttons_up),
    .inside_buttons_down            (_board_inside_buttons_down),
    .inside_buttons_left            (_board_inside_buttons_left),
    .inside_buttons_right           (_board_inside_buttons_right),
    .inside_buttons_center          (_board_inside_buttons_center),
    .inside_keyboard_valid          (_board_inside_keyboard_valid),
    .inside_keyboard_bits           (_board_inside_keyboard_bits),
    .inside_vgaDataPort_dataOut     (_board_inside_vgaDataPort_dataOut),
    .inside_originPC                (_board_inside_originPC),
    .io_interrupt                   (_board_io_interrupt)
  );
  Core core (
    .clock                               (_clocks_io_clockCpu),
    .reset                               (_clocks_io_reset),
    .io_external_uartOut_ready           (_board_inside_uartOut_ready),
    .io_external_uartIn_valid            (_board_inside_uartIn_valid),
    .io_external_uartIn_bits             (_board_inside_uartIn_bits),
    .io_external_cycles                  (_board_inside_cycles),
    .io_external_switches_0              (_board_inside_switches_0),
    .io_external_switches_1              (_board_inside_switches_1),
    .io_external_switches_2              (_board_inside_switches_2),
    .io_external_switches_3              (_board_inside_switches_3),
    .io_external_switches_4              (_board_inside_switches_4),
    .io_external_switches_5              (_board_inside_switches_5),
    .io_external_switches_6              (_board_inside_switches_6),
    .io_external_switches_7              (_board_inside_switches_7),
    .io_external_switches_8              (_board_inside_switches_8),
    .io_external_switches_9              (_board_inside_switches_9),
    .io_external_switches_10             (_board_inside_switches_10),
    .io_external_switches_11             (_board_inside_switches_11),
    .io_external_switches_12             (_board_inside_switches_12),
    .io_external_switches_13             (_board_inside_switches_13),
    .io_external_switches_14             (_board_inside_switches_14),
    .io_external_switches_15             (_board_inside_switches_15),
    .io_external_switches_16             (_board_inside_switches_16),
    .io_external_switches_17             (_board_inside_switches_17),
    .io_external_switches_18             (_board_inside_switches_18),
    .io_external_switches_19             (_board_inside_switches_19),
    .io_external_switches_20             (_board_inside_switches_20),
    .io_external_switches_21             (_board_inside_switches_21),
    .io_external_switches_22             (_board_inside_switches_22),
    .io_external_switches_23             (_board_inside_switches_23),
    .io_external_buttons_up              (_board_inside_buttons_up),
    .io_external_buttons_down            (_board_inside_buttons_down),
    .io_external_buttons_left            (_board_inside_buttons_left),
    .io_external_buttons_right           (_board_inside_buttons_right),
    .io_external_buttons_center          (_board_inside_buttons_center),
    .io_external_keyboard_valid          (_board_inside_keyboard_valid),
    .io_external_keyboard_bits           (_board_inside_keyboard_bits),
    .io_external_vgaDataPort_dataOut     (_board_inside_vgaDataPort_dataOut),
    .io_external_originPC                (_board_inside_originPC),
    .io_interrupt                        (_board_io_interrupt),
    .io_cycles                           (_core_io_cycles),
    .io_external_uartOut_valid           (_core_io_external_uartOut_valid),
    .io_external_uartOut_bits            (_core_io_external_uartOut_bits),
    .io_external_uartIn_ready            (_core_io_external_uartIn_ready),
    .io_external_regable_tubes_value     (_core_io_external_regable_tubes_value),
    .io_external_regable_tubes_enables_0 (_core_io_external_regable_tubes_enables_0),
    .io_external_regable_tubes_enables_1 (_core_io_external_regable_tubes_enables_1),
    .io_external_regable_tubes_enables_2 (_core_io_external_regable_tubes_enables_2),
    .io_external_regable_tubes_enables_3 (_core_io_external_regable_tubes_enables_3),
    .io_external_regable_tubes_enables_4 (_core_io_external_regable_tubes_enables_4),
    .io_external_regable_tubes_enables_5 (_core_io_external_regable_tubes_enables_5),
    .io_external_regable_tubes_enables_6 (_core_io_external_regable_tubes_enables_6),
    .io_external_regable_tubes_enables_7 (_core_io_external_regable_tubes_enables_7),
    .io_external_regable_tubes_mode      (_core_io_external_regable_tubes_mode),
    .io_external_regable_leds_0          (_core_io_external_regable_leds_0),
    .io_external_regable_leds_1          (_core_io_external_regable_leds_1),
    .io_external_regable_leds_2          (_core_io_external_regable_leds_2),
    .io_external_regable_leds_3          (_core_io_external_regable_leds_3),
    .io_external_regable_leds_4          (_core_io_external_regable_leds_4),
    .io_external_regable_leds_5          (_core_io_external_regable_leds_5),
    .io_external_regable_leds_6          (_core_io_external_regable_leds_6),
    .io_external_regable_leds_7          (_core_io_external_regable_leds_7),
    .io_external_regable_leds_8          (_core_io_external_regable_leds_8),
    .io_external_regable_leds_9          (_core_io_external_regable_leds_9),
    .io_external_regable_leds_10         (_core_io_external_regable_leds_10),
    .io_external_regable_leds_11         (_core_io_external_regable_leds_11),
    .io_external_regable_leds_12         (_core_io_external_regable_leds_12),
    .io_external_regable_leds_13         (_core_io_external_regable_leds_13),
    .io_external_regable_leds_14         (_core_io_external_regable_leds_14),
    .io_external_regable_leds_15         (_core_io_external_regable_leds_15),
    .io_external_regable_leds_16         (_core_io_external_regable_leds_16),
    .io_external_regable_leds_17         (_core_io_external_regable_leds_17),
    .io_external_regable_leds_18         (_core_io_external_regable_leds_18),
    .io_external_regable_leds_19         (_core_io_external_regable_leds_19),
    .io_external_regable_leds_20         (_core_io_external_regable_leds_20),
    .io_external_regable_leds_21         (_core_io_external_regable_leds_21),
    .io_external_regable_leds_22         (_core_io_external_regable_leds_22),
    .io_external_regable_leds_23         (_core_io_external_regable_leds_23),
    .io_external_keyboard_ready          (_core_io_external_keyboard_ready),
    .io_external_vgaDataPort_addr        (_core_io_external_vgaDataPort_addr),
    .io_external_vgaDataPort_dataIn      (_core_io_external_vgaDataPort_dataIn),
    .io_external_vgaDataPort_write       (_core_io_external_vgaDataPort_write),
    .io_originPC                         (_core_io_originPC)
  );
endmodule

